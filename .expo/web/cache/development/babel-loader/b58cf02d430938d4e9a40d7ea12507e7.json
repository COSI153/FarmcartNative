{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/modals/InputModal.js\";\nimport React from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../buttons/Button\";\nimport LinkButton from \"../buttons/LinkButton\";\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\nvar IOS = Platform.OS === 'ios';\nvar styles = StyleSheet.create({\n  modalWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.52)'\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 24,\n    paddingHorizontal: 20,\n    width: Layout.SCREEN_WIDTH - 3 * Layout.LARGE_MARGIN,\n    borderRadius: 4,\n    backgroundColor: Colors.background\n  },\n  title: {\n    marginBottom: 4,\n    fontWeight: '700',\n    fontSize: 18,\n    color: Colors.primaryText\n  },\n  message: {\n    marginBottom: 16,\n    padding: 8,\n    fontWeight: '400',\n    color: Colors.secondaryText,\n    textAlign: 'center'\n  },\n  inputContainer: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.16)',\n    borderRadius: 4\n  },\n  textInput: {\n    height: 46,\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    marginTop: 12,\n    marginBottom: 24,\n    width: '100%'\n  },\n  button: {\n    borderRadius: 4\n  }\n});\n\nvar InputModal = function InputModal(_ref) {\n  var message = _ref.message,\n      onRequestClose = _ref.onRequestClose,\n      title = _ref.title,\n      inputDefaultValue = _ref.inputDefaultValue,\n      inputPlaceholder = _ref.inputPlaceholder,\n      inputKeyboardType = _ref.inputKeyboardType,\n      buttonTitle = _ref.buttonTitle,\n      onButtonPress = _ref.onButtonPress,\n      onClosePress = _ref.onClosePress,\n      _ref$statusBarColor = _ref.statusBarColor,\n      statusBarColor = _ref$statusBarColor === void 0 ? 'rgba(0, 0, 0, 0.52)' : _ref$statusBarColor,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible;\n  return React.createElement(Modal, {\n    animationType: \"none\",\n    transparent: true,\n    visible: visible,\n    onRequestClose: onRequestClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: statusBarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: onRequestClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    }\n  }, React.createElement(View, {\n    style: styles.modalWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    enabled: IOS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    }\n  }, React.createElement(View, {\n    style: styles.modalContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    }\n  }, title), message !== '' && message !== undefined && React.createElement(Text, {\n    style: styles.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    }\n  }, message), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    }\n  }, React.createElement(TextInput, {\n    defaultValue: inputDefaultValue,\n    placeholder: inputPlaceholder,\n    keyboardType: inputKeyboardType,\n    style: styles.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    }\n  }, React.createElement(Button, {\n    onPress: onButtonPress,\n    title: buttonTitle,\n    buttonStyle: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    }\n  })), React.createElement(LinkButton, {\n    onPress: onClosePress,\n    title: 'Close'.toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    }\n  })))))));\n};\n\nexport default InputModal;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/modals/InputModal.js"],"names":["React","Button","LinkButton","Colors","Layout","IOS","Platform","OS","styles","StyleSheet","create","modalWrapper","flex","justifyContent","alignItems","backgroundColor","modalContainer","paddingVertical","paddingHorizontal","width","SCREEN_WIDTH","LARGE_MARGIN","borderRadius","background","title","marginBottom","fontWeight","fontSize","color","primaryText","message","padding","secondaryText","textAlign","inputContainer","borderWidth","borderColor","textInput","height","buttonContainer","marginTop","button","InputModal","onRequestClose","inputDefaultValue","inputPlaceholder","inputKeyboardType","buttonTitle","onButtonPress","onClosePress","statusBarColor","visible","undefined","toUpperCase"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {\n  KeyboardAvoidingView,\n  Modal,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\n\n// import components\nimport Button from '../buttons/Button';\nimport LinkButton from '../buttons/LinkButton';\n\n// import colors, layout\nimport Colors from '../../theme/colors';\nimport Layout from '../../theme/layout';\n\n// InputModal Config\nconst IOS = Platform.OS === 'ios';\n\n// InputModal Styles\nconst styles = StyleSheet.create({\n  modalWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.52)',\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 24,\n    paddingHorizontal: 20,\n    width: Layout.SCREEN_WIDTH - 3 * Layout.LARGE_MARGIN,\n    borderRadius: 4,\n    backgroundColor: Colors.background,\n  },\n  title: {\n    marginBottom: 4,\n    fontWeight: '700',\n    fontSize: 18,\n    color: Colors.primaryText,\n  },\n  message: {\n    marginBottom: 16,\n    padding: 8,\n    fontWeight: '400',\n    color: Colors.secondaryText,\n    textAlign: 'center',\n  },\n  inputContainer: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.16)',\n    borderRadius: 4,\n  },\n  textInput: {\n    height: 46,\n    textAlign: 'center',\n  },\n  buttonContainer: {\n    marginTop: 12,\n    marginBottom: 24,\n    width: '100%',\n  },\n  button: {\n    borderRadius: 4,\n  },\n});\n\n// InputModal Props\ntype Props = {\n  message: string,\n  onRequestClose: () => {},\n  title: string,\n  inputDefaultValue: string,\n  inputPlaceholder: string,\n  inputKeyboardType:\n    | 'default'\n    | 'number-pad'\n    | 'numeric'\n    | 'email-address'\n    | 'phone-pad',\n  buttonTitle: string,\n  onButtonPress: () => {},\n  onClosePress: () => {},\n  statusBarColor: string,\n  visible: boolean,\n};\n\n// InputModal\nconst InputModal = ({\n  message,\n  onRequestClose,\n  title,\n  inputDefaultValue,\n  inputPlaceholder,\n  inputKeyboardType,\n  buttonTitle,\n  onButtonPress,\n  onClosePress,\n  statusBarColor = 'rgba(0, 0, 0, 0.52)',\n  visible = false,\n}: Props) => (\n  <Modal\n    animationType=\"none\"\n    transparent\n    visible={visible}\n    onRequestClose={onRequestClose}>\n    <StatusBar backgroundColor={statusBarColor} />\n    <TouchableWithoutFeedback onPress={onRequestClose}>\n      <View style={styles.modalWrapper}>\n        <TouchableWithoutFeedback>\n          <KeyboardAvoidingView behavior=\"position\" enabled={IOS}>\n            <View style={styles.modalContainer}>\n              <Text style={styles.title}>{title}</Text>\n\n              {message !== '' && message !== undefined && (\n                <Text style={styles.message}>{message}</Text>\n              )}\n\n              <View style={styles.inputContainer}>\n                <TextInput\n                  defaultValue={inputDefaultValue}\n                  placeholder={inputPlaceholder}\n                  keyboardType={inputKeyboardType}\n                  style={styles.textInput}\n                />\n              </View>\n\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onButtonPress}\n                  title={buttonTitle}\n                  buttonStyle={styles.button}\n                />\n              </View>\n\n              <LinkButton\n                onPress={onClosePress}\n                title={'Close'.toUpperCase()}\n              />\n            </View>\n          </KeyboardAvoidingView>\n        </TouchableWithoutFeedback>\n      </View>\n    </TouchableWithoutFeedback>\n  </Modal>\n);\n\nexport default InputModal;\n"]},"metadata":{},"sourceType":"module"}