{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/buttons/OutlinedButton.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewStyle } from \"react-native-web/dist/index\";\nimport { Ionicons as Icon, FontAwesome as FAIcon } from '@expo/vector-icons';\nimport Color from 'color';\nimport { ButtonText } from \"../text/CustomText\";\nimport TouchableItem from \"../TouchableItem\";\nimport Colors from \"../../theme/colors\";\nvar BUTTON_BORDER_RADIUS = 4;\nvar BUTTON_HEIGHT = 44;\nvar BUTTON_WIDTH = '100%';\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: 2,\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderRadius: BUTTON_BORDER_RADIUS,\n    backgroundColor: 'transparent',\n    overflow: 'hidden'\n  },\n  outlinedButton: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: 64,\n    maxWidth: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT\n  },\n  rounded: {\n    borderRadius: BUTTON_HEIGHT / 2\n  },\n  socialIconContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: 52\n  },\n  iconContainer: {\n    marginLeft: 12\n  },\n  pl8: {\n    paddingLeft: 8\n  },\n  title: {\n    paddingHorizontal: 16,\n    color: Colors.primaryColor,\n    textAlign: 'center'\n  }\n});\n\nvar OutlinedButton = function OutlinedButton(_ref) {\n  var onPress = _ref.onPress,\n      _ref$activeOpacity = _ref.activeOpacity,\n      activeOpacity = _ref$activeOpacity === void 0 ? 0.85 : _ref$activeOpacity,\n      buttonStyle = _ref.buttonStyle,\n      height = _ref.height,\n      borderColor = _ref.borderColor,\n      borderRadius = _ref.borderRadius,\n      color = _ref.color,\n      iconColor = _ref.iconColor,\n      iconName = _ref.iconName,\n      socialIconName = _ref.socialIconName,\n      title = _ref.title,\n      titleColor = _ref.titleColor,\n      _ref$rippleColor = _ref.rippleColor,\n      rippleColor = _ref$rippleColor === void 0 ? Color(Colors.primaryColor).alpha(0.12).rgb().string() : _ref$rippleColor,\n      rounded = _ref.rounded;\n  return React.createElement(View, {\n    style: [styles.container, color && {\n      backgroundColor: color\n    }, borderColor && {\n      borderColor: borderColor\n    }, borderRadius && {\n      borderRadius: borderRadius\n    }, rounded && styles.rounded, height && rounded && {\n      borderRadius: height / 2\n    }, buttonStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }, React.createElement(TouchableItem, {\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    rippleColor: rippleColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    }\n  }, React.createElement(View, {\n    style: [styles.outlinedButton, height && {\n      height: height\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    }\n  }, socialIconName && React.createElement(View, {\n    style: styles.socialIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    }\n  }, React.createElement(FAIcon, {\n    name: socialIconName,\n    size: 20,\n    color: iconColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    }\n  })), iconName && React.createElement(View, {\n    style: styles.iconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    }\n  }, React.createElement(Icon, {\n    name: iconName,\n    size: 18,\n    color: iconColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    }\n  })), React.createElement(ButtonText, {\n    style: [styles.title, titleColor && {\n      color: titleColor\n    }, iconName && styles.pl8],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    }\n  }, title !== undefined ? title.toUpperCase() : 'BUTTON'))));\n};\n\nexport default OutlinedButton;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/buttons/OutlinedButton.js"],"names":["React","ViewStyle","Ionicons","Icon","FontAwesome","FAIcon","Color","ButtonText","TouchableItem","Colors","BUTTON_BORDER_RADIUS","BUTTON_HEIGHT","BUTTON_WIDTH","styles","StyleSheet","create","container","borderWidth","borderColor","borderRadius","backgroundColor","overflow","outlinedButton","flexDirection","justifyContent","alignItems","minWidth","maxWidth","height","rounded","socialIconContainer","position","top","left","width","iconContainer","marginLeft","pl8","paddingLeft","title","paddingHorizontal","color","primaryColor","textAlign","OutlinedButton","onPress","activeOpacity","buttonStyle","iconColor","iconName","socialIconName","titleColor","rippleColor","alpha","rgb","string","undefined","toUpperCase"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {StyleSheet, View, ViewStyle} from 'react-native';\nimport {Ionicons as Icon, FontAwesome as FAIcon} from '@expo/vector-icons';\nimport Color from 'color';\n\n// import components\nimport {ButtonText} from '../text/CustomText';\nimport TouchableItem from '../TouchableItem';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// OutlinedButton Config\nconst BUTTON_BORDER_RADIUS = 4;\nconst BUTTON_HEIGHT = 44;\nconst BUTTON_WIDTH = '100%';\n\n// OutlinedButton Styles\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: 2,\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderRadius: BUTTON_BORDER_RADIUS,\n    backgroundColor: 'transparent',\n    overflow: 'hidden',\n  },\n  outlinedButton: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: 64,\n    maxWidth: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n  },\n  rounded: {\n    borderRadius: BUTTON_HEIGHT / 2,\n  },\n  socialIconContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: 52,\n  },\n  iconContainer: {\n    marginLeft: 12,\n  },\n  pl8: {paddingLeft: 8},\n  title: {\n    paddingHorizontal: 16,\n    color: Colors.primaryColor,\n    textAlign: 'center',\n  },\n});\n\n// OutlinedButton Props\ntype Props = {\n  onPress: () => void,\n  activeOpacity: number,\n  buttonStyle: ViewStyle,\n  height: number,\n  borderColor: string,\n  borderRadius: number,\n  color: string,\n  iconColor: string,\n  iconName: string,\n  socialIconName: string,\n  title: string,\n  titleColor: string,\n  rippleColor: string,\n  rounded: boolean,\n};\n\n// OutlinedButton\nconst OutlinedButton = ({\n  onPress,\n  activeOpacity = 0.85,\n  buttonStyle,\n  height,\n  borderColor,\n  borderRadius,\n  color,\n  iconColor,\n  iconName,\n  socialIconName,\n  title,\n  titleColor,\n  rippleColor = Color(Colors.primaryColor).alpha(0.12).rgb().string(),\n  rounded,\n}: Props) => (\n  <View\n    style={[\n      styles.container,\n      color && {backgroundColor: color},\n      borderColor && {borderColor},\n      borderRadius && {borderRadius},\n      rounded && styles.rounded,\n      height && rounded && {borderRadius: height / 2},\n      buttonStyle,\n    ]}>\n    <TouchableItem\n      onPress={onPress}\n      activeOpacity={activeOpacity}\n      rippleColor={rippleColor}>\n      <View style={[styles.outlinedButton, height && {height}]}>\n        {socialIconName && (\n          <View style={styles.socialIconContainer}>\n            <FAIcon name={socialIconName} size={20} color={iconColor} />\n          </View>\n        )}\n        {iconName && (\n          <View style={styles.iconContainer}>\n            <Icon name={iconName} size={18} color={iconColor} />\n          </View>\n        )}\n        <ButtonText\n          style={[\n            styles.title,\n            titleColor && {color: titleColor},\n            iconName && styles.pl8,\n          ]}>\n          {title !== undefined ? title.toUpperCase() : 'BUTTON'}\n        </ButtonText>\n      </View>\n    </TouchableItem>\n  </View>\n);\n\nexport default OutlinedButton;\n"]},"metadata":{},"sourceType":"module"}