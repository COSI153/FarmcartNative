{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/navigation/HeaderIconButton.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"../icon/Icon\";\nimport TouchableItem from \"../TouchableItem\";\nvar IOS = Platform.OS === 'ios';\nvar styles = StyleSheet.create({\n  androidButtonWrapper: {\n    marginHorizontal: 13,\n    backgroundColor: 'transparent'\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  icon: IOS ? {\n    height: 26,\n    width: 26,\n    marginRight: 14,\n    marginVertical: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  } : {\n    height: 24,\n    width: 24,\n    margin: 3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar renderIcon = function renderIcon(name, size, color) {\n  return React.createElement(View, {\n    style: styles.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }, React.createElement(Icon, {\n    name: name,\n    size: size,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }));\n};\n\nvar HeaderIconButton = function HeaderIconButton(props) {\n  var _props$onPress = props.onPress,\n      onPress = _props$onPress === void 0 ? function () {\n    return null;\n  } : _props$onPress,\n      _props$rippleColor = props.rippleColor,\n      rippleColor = _props$rippleColor === void 0 ? 'rgba(0, 0, 0, 0.32)' : _props$rippleColor,\n      name = props.name,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 24 : _props$size,\n      _props$color = props.color,\n      color = _props$color === void 0 ? Platform.OS === 'android' ? 'rgba(0, 0, 0, 0.52)' : '#037aff' : _props$color;\n  var button = React.createElement(TouchableItem, {\n    accessibilityComponentType: \"button\",\n    accessibilityTraits: \"button\",\n    delayPressIn: 0,\n    onPress: onPress,\n    rippleColor: rippleColor,\n    style: styles.container,\n    useForeground: true,\n    borderless: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    }\n  }, renderIcon(name, size, color));\n\n  if (Platform.OS === 'android') {\n    return React.createElement(View, {\n      style: styles.androidButtonWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      }\n    }, button);\n  }\n\n  return button;\n};\n\nexport default HeaderIconButton;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/navigation/HeaderIconButton.js"],"names":["React","Icon","TouchableItem","IOS","Platform","OS","styles","StyleSheet","create","androidButtonWrapper","marginHorizontal","backgroundColor","container","flexDirection","alignItems","icon","height","width","marginRight","marginVertical","justifyContent","margin","renderIcon","name","size","color","HeaderIconButton","props","onPress","rippleColor","button"],"mappings":";AAQA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAIA,OAAOC,IAAP;AACA,OAAOC,aAAP;AAGA,IAAMC,GAAG,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA5B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,gBAAgB,EAAE,EADE;AAEpBC,IAAAA,eAAe,EAAE;AAFG,GADS;AAK/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTH,IAAAA,eAAe,EAAE;AAHR,GALoB;AAU/BI,EAAAA,IAAI,EAAEZ,GAAG,GACL;AACEa,IAAAA,MAAM,EAAE,EADV;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,WAAW,EAAE,EAHf;AAIEC,IAAAA,cAAc,EAAE,CAJlB;AAKEC,IAAAA,cAAc,EAAE,QALlB;AAMEN,IAAAA,UAAU,EAAE;AANd,GADK,GASL;AACEE,IAAAA,MAAM,EAAE,EADV;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEI,IAAAA,MAAM,EAAE,CAHV;AAIED,IAAAA,cAAc,EAAE,QAJlB;AAKEN,IAAAA,UAAU,EAAE;AALd;AAnB2B,CAAlB,CAAf;;AA4BA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb;AAAA,SACjB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEQ,IAAZ;AAAkB,IAAA,IAAI,EAAEC,IAAxB;AAA8B,IAAA,KAAK,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADiB;AAAA,CAAnB;;AAgBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,uBAO9BA,KAP8B,CAEhCC,OAFgC;AAAA,MAEhCA,OAFgC,+BAEtB;AAAA,WAAM,IAAN;AAAA,GAFsB;AAAA,2BAO9BD,KAP8B,CAGhCE,WAHgC;AAAA,MAGhCA,WAHgC,mCAGlB,qBAHkB;AAAA,MAIhCN,IAJgC,GAO9BI,KAP8B,CAIhCJ,IAJgC;AAAA,oBAO9BI,KAP8B,CAKhCH,IALgC;AAAA,MAKhCA,IALgC,4BAKzB,EALyB;AAAA,qBAO9BG,KAP8B,CAMhCF,KANgC;AAAA,MAMhCA,KANgC,6BAMxBrB,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,qBAA5B,GAAoD,SAN5B;AASlC,MAAMyB,MAAM,GACV,oBAAC,aAAD;AACE,IAAA,0BAA0B,EAAC,QAD7B;AAEE,IAAA,mBAAmB,EAAC,QAFtB;AAGE,IAAA,YAAY,EAAE,CAHhB;AAIE,IAAA,OAAO,EAAEF,OAJX;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,KAAK,EAAEvB,MAAM,CAACM,SANhB;AAOE,IAAA,aAAa,MAPf;AAQE,IAAA,UAAU,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA,KASGU,UAAU,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,CATb,CADF;;AAcA,MAAIrB,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,WAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACG,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CqB,MAA3C,CAAP;AACD;;AACD,SAAOA,MAAP;AACD,CA3BD;;AA6BA,eAAeJ,gBAAf","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {Platform, StyleSheet, View} from 'react-native';\n\n// import components\nimport Icon from '../icon/Icon';\nimport TouchableItem from '../TouchableItem';\n\n// HeaderIconButton Config\nconst IOS = Platform.OS === 'ios';\n\n// HeaderIconButton Styles\nconst styles = StyleSheet.create({\n  androidButtonWrapper: {\n    marginHorizontal: 13,\n    backgroundColor: 'transparent',\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  icon: IOS\n    ? {\n        height: 26, // 24\n        width: 26, // 24\n        marginRight: 14,\n        marginVertical: 8, // 10\n        justifyContent: 'center',\n        alignItems: 'center',\n      }\n    : {\n        height: 24,\n        width: 24,\n        margin: 3,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n});\n\nconst renderIcon = (name, size, color) => (\n  <View style={styles.icon}>\n    <Icon name={name} size={size} color={color} />\n  </View>\n);\n\n// HeaderIconButton\n/**\n    <HeaderIconButton\n      onPress={() => null}\n      rippleColor=\"rgba(0, 0, 0, 0.32)\"\n      name=\"ios-videocam\"\n      size={22}\n      color=\"#037aff\"\n    />\n */\nconst HeaderIconButton = (props) => {\n  const {\n    onPress = () => null,\n    rippleColor = 'rgba(0, 0, 0, 0.32)',\n    name,\n    size = 24,\n    color = Platform.OS === 'android' ? 'rgba(0, 0, 0, 0.52)' : '#037aff',\n  } = props;\n\n  const button = (\n    <TouchableItem\n      accessibilityComponentType=\"button\"\n      accessibilityTraits=\"button\"\n      delayPressIn={0}\n      onPress={onPress}\n      rippleColor={rippleColor}\n      style={styles.container}\n      useForeground\n      borderless>\n      {renderIcon(name, size, color)}\n    </TouchableItem>\n  );\n\n  if (Platform.OS === 'android') {\n    return <View style={styles.androidButtonWrapper}>{button}</View>;\n  }\n  return button;\n};\n\nexport default HeaderIconButton;\n"]},"metadata":{},"sourceType":"module"}