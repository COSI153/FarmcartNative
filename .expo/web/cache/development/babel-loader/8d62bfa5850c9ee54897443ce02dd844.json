{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/onboarding/OnboardingA.js\";\nimport React, { Component } from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\nimport Swiper from 'react-native-swiper';\nimport { Heading5, Paragraph } from \"../../components/text/CustomText\";\nimport TouchableItem from \"../../components/TouchableItem\";\nimport Colors from \"../../theme/colors\";\nvar isRTL = I18nManager.isRTL;\nvar BUTTON_HEIGHT = 58;\nvar BUTTON_WIDTH = 92;\n\nvar slide1Img = require(\"../../assets/img/onboarding_1.png\");\n\nvar slide2Img = require(\"../../assets/img/onboarding_2.png\");\n\nvar slide3Img = require(\"../../assets/img/onboarding_3.png\");\n\nvar slide4Img = require(\"../../assets/img/onboarding_4.png\");\n\nvar slides = [{\n  id: 'slide1',\n  img: slide1Img,\n  title: 'Find your flavour',\n  description: 'Easy and fast way to order food from the best local restaurant.'\n}, {\n  id: 'slide2',\n  img: slide2Img,\n  title: 'Choose your meal',\n  description: 'Browse through menu and reviews to find the food you like.'\n}, {\n  id: 'slide3',\n  img: slide3Img,\n  title: 'Easy payment',\n  description: 'Pay online with credit card. Click, sit back and relax.'\n}, {\n  id: 'slide4',\n  img: slide4Img,\n  title: 'Delivered fast',\n  description: 'Get food to your door in minutes. We deliver, you enjoy!'\n}];\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    backgroundColor: Colors.background\n  },\n  swiperContainer: {\n    flex: 1\n  },\n  slide: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24\n  },\n  slideImg: {\n    borderRadius: 8,\n    width: 232,\n    height: 192,\n    resizeMode: 'cover'\n  },\n  title: {\n    paddingTop: 24,\n    color: Colors.primaryText,\n    textAlign: 'center'\n  },\n  descriptionContainer: {\n    paddingVertical: 16,\n    paddingHorizontal: 20\n  },\n  descriptionText: {\n    fontSize: 15,\n    lineHeight: 23,\n    color: Colors.secondaryText,\n    textAlign: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  paginationContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, 0.12)',\n    height: BUTTON_HEIGHT,\n    backgroundColor: Colors.background\n  },\n  buttonContainer: {\n    width: BUTTON_WIDTH\n  },\n  leftButton: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    paddingLeft: 10,\n    paddingRight: 12\n  },\n  rightButton: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    paddingLeft: 12,\n    paddingRight: 10\n  },\n  actionButton: {\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontWeight: '700',\n    fontSize: 14,\n    color: Colors.primaryColor\n  },\n  dot: {\n    margin: 4,\n    width: 8,\n    height: 8,\n    borderRadius: 4\n  },\n  bgDark: {\n    backgroundColor: Colors.primaryColorDark\n  },\n  bgLight: {\n    backgroundColor: Colors.primaryColorDark,\n    opacity: 0.3\n  }\n});\n\nvar OnboardingA = function (_Component) {\n  _inherits(OnboardingA, _Component);\n\n  function OnboardingA(props) {\n    var _this;\n\n    _classCallCheck(this, OnboardingA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnboardingA).call(this, props));\n\n    _this.onIndexChanged = function (index) {\n      var activeIndex;\n\n      if (isRTL) {\n        activeIndex = slides.length - 1 - index;\n      } else {\n        activeIndex = index;\n      }\n\n      _this.setState({\n        activeIndex: activeIndex\n      });\n    };\n\n    _this.previousSlide = function () {\n      _this.swiper.scrollBy(-1, true);\n    };\n\n    _this.nextSlide = function () {\n      _this.swiper.scrollBy(1, true);\n    };\n\n    _this.navigateTo = function (screen) {\n      return function () {\n        var navigation = _this.props.navigation;\n        navigation.navigate(screen);\n      };\n    };\n\n    _this.state = {\n      activeIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(OnboardingA, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeIndex = this.state.activeIndex;\n      return React.createElement(SafeAreaView, {\n        style: styles.screenContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Colors.statusBarColor,\n        barStyle: \"dark-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }), React.createElement(View, {\n        style: styles.swiperContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        }\n      }, React.createElement(Swiper, {\n        ref: function ref(swiper) {\n          _this2.swiper = swiper;\n        },\n        index: isRTL ? slides.length - 1 : 0,\n        onIndexChanged: this.onIndexChanged,\n        loop: false,\n        showsPagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      }, slides.map(function (item) {\n        return React.createElement(View, {\n          key: item.id,\n          style: styles.slide,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          }\n        }, React.createElement(Image, {\n          source: item.img,\n          style: styles.slideImg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          }\n        }), React.createElement(Heading5, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          }\n        }, item.title), React.createElement(View, {\n          style: styles.descriptionContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        }, React.createElement(Paragraph, {\n          style: styles.descriptionText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          }\n        }, item.description)));\n      }))), React.createElement(View, {\n        style: styles.paginationContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        }\n      }, React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }, activeIndex > 0 ? React.createElement(TouchableItem, {\n        onPress: isRTL ? this.nextSlide : this.previousSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.leftButton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        }\n      }, React.createElement(Icon, {\n        name: isRTL ? 'chevron-right' : 'chevron-left',\n        size: 24,\n        color: Colors.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      }, 'back'.toUpperCase()))) : React.createElement(TouchableItem, {\n        onPress: this.navigateTo('Welcome'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      }, React.createElement(View, {\n        style: styles.actionButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        }\n      }, 'skip'.toUpperCase())))), React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        }\n      }, slides.map(function (item, i) {\n        return React.createElement(View, {\n          key: \"dot_\" + item.id,\n          style: [styles.dot, activeIndex === i ? styles.bgDark : styles.bgLight],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        });\n      })), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        }\n      }, activeIndex < slides.length - 1 ? React.createElement(TouchableItem, {\n        onPress: isRTL ? this.previousSlide : this.nextSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.rightButton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        }\n      }, 'next'.toUpperCase()), React.createElement(Icon, {\n        name: isRTL ? 'chevron-left' : 'chevron-right',\n        size: 24,\n        color: Colors.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        }\n      }))) : React.createElement(TouchableItem, {\n        onPress: this.navigateTo('Welcome'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        }\n      }, React.createElement(View, {\n        style: styles.actionButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        }\n      }, 'done'.toUpperCase()))))));\n    }\n  }]);\n\n  return OnboardingA;\n}(Component);\n\nexport { OnboardingA as default };","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/onboarding/OnboardingA.js"],"names":["React","Component","MaterialCommunityIcons","Icon","Swiper","Heading5","Paragraph","TouchableItem","Colors","isRTL","I18nManager","BUTTON_HEIGHT","BUTTON_WIDTH","slide1Img","require","slide2Img","slide3Img","slide4Img","slides","id","img","title","description","styles","StyleSheet","create","screenContainer","flex","backgroundColor","background","swiperContainer","slide","justifyContent","alignItems","paddingHorizontal","slideImg","borderRadius","width","height","resizeMode","paddingTop","color","primaryText","textAlign","descriptionContainer","paddingVertical","descriptionText","fontSize","lineHeight","secondaryText","row","flexDirection","paginationContainer","borderTopWidth","hairlineWidth","borderTopColor","buttonContainer","leftButton","paddingLeft","paddingRight","rightButton","actionButton","buttonText","fontWeight","primaryColor","dot","margin","bgDark","primaryColorDark","bgLight","opacity","OnboardingA","props","onIndexChanged","index","activeIndex","length","setState","previousSlide","swiper","scrollBy","nextSlide","navigateTo","screen","navigation","navigate","state","statusBarColor","map","item","toUpperCase","i"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  I18nManager,\n  Image,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport {MaterialCommunityIcons as Icon} from '@expo/vector-icons';\nimport Swiper from 'react-native-swiper';\n\n// import components\nimport {Heading5, Paragraph} from '../../components/text/CustomText';\nimport TouchableItem from '../../components/TouchableItem';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// OnboardingA Config\nconst isRTL = I18nManager.isRTL;\nconst BUTTON_HEIGHT = 58; // pagination button height\nconst BUTTON_WIDTH = 92; // pagination button width\n\nconst slide1Img = require('../../assets/img/onboarding_1.png');\nconst slide2Img = require('../../assets/img/onboarding_2.png');\nconst slide3Img = require('../../assets/img/onboarding_3.png');\nconst slide4Img = require('../../assets/img/onboarding_4.png');\n\nconst slides = [\n  {\n    id: 'slide1',\n    img: slide1Img,\n    title: 'Find your flavour',\n    description:\n      'Easy and fast way to order food from the best local restaurant.',\n  },\n  {\n    id: 'slide2',\n    img: slide2Img,\n    title: 'Choose your meal',\n    description: 'Browse through menu and reviews to find the food you like.',\n  },\n  {\n    id: 'slide3',\n    img: slide3Img,\n    title: 'Easy payment',\n    description: 'Pay online with credit card. Click, sit back and relax.',\n  },\n  {\n    id: 'slide4',\n    img: slide4Img,\n    title: 'Delivered fast',\n    description: 'Get food to your door in minutes. We deliver, you enjoy!',\n  },\n];\n\n// OnboardingA Styles\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    backgroundColor: Colors.background,\n  },\n  swiperContainer: {\n    flex: 1,\n  },\n  slide: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  slideImg: {\n    borderRadius: 8,\n    width: 232,\n    height: 192,\n    resizeMode: 'cover',\n  },\n  title: {\n    paddingTop: 24,\n    color: Colors.primaryText,\n    textAlign: 'center',\n  },\n  descriptionContainer: {\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n  },\n  descriptionText: {\n    fontSize: 15,\n    lineHeight: 23,\n    color: Colors.secondaryText,\n    textAlign: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  paginationContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, 0.12)',\n    height: BUTTON_HEIGHT,\n    backgroundColor: Colors.background,\n  },\n  buttonContainer: {\n    width: BUTTON_WIDTH,\n  },\n  leftButton: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    paddingLeft: 10,\n    paddingRight: 12,\n  },\n  rightButton: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    paddingLeft: 12,\n    paddingRight: 10,\n  },\n  actionButton: {\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonText: {\n    fontWeight: '700',\n    fontSize: 14,\n    color: Colors.primaryColor,\n  },\n  dot: {\n    margin: 4,\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n  bgDark: {\n    backgroundColor: Colors.primaryColorDark,\n  },\n  bgLight: {\n    backgroundColor: Colors.primaryColorDark,\n    opacity: 0.3,\n  },\n});\n\nexport default class OnboardingA extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n    };\n  }\n\n  onIndexChanged = (index) => {\n    let activeIndex;\n    if (isRTL) {\n      activeIndex = slides.length - 1 - index;\n    } else {\n      activeIndex = index;\n    }\n    this.setState({\n      activeIndex: activeIndex,\n    });\n  };\n\n  previousSlide = () => {\n    this.swiper.scrollBy(-1, true);\n  };\n\n  nextSlide = () => {\n    this.swiper.scrollBy(1, true);\n  };\n\n  navigateTo = (screen) => () => {\n    const {navigation} = this.props;\n    navigation.navigate(screen);\n  };\n\n  render() {\n    const {activeIndex} = this.state;\n\n    return (\n      <SafeAreaView style={styles.screenContainer}>\n        <StatusBar\n          backgroundColor={Colors.statusBarColor}\n          barStyle=\"dark-content\"\n        />\n\n        <View style={styles.swiperContainer}>\n          <Swiper\n            ref={(swiper) => {\n              this.swiper = swiper;\n            }}\n            index={isRTL ? slides.length - 1 : 0}\n            onIndexChanged={this.onIndexChanged}\n            loop={false}\n            showsPagination={false}>\n            {slides.map((item) => (\n              <View key={item.id} style={styles.slide}>\n                <Image source={item.img} style={styles.slideImg} />\n                <Heading5 style={styles.title}>{item.title}</Heading5>\n                <View style={styles.descriptionContainer}>\n                  <Paragraph style={styles.descriptionText}>\n                    {item.description}\n                  </Paragraph>\n                </View>\n              </View>\n            ))}\n          </Swiper>\n        </View>\n\n        <View style={styles.paginationContainer}>\n          <View style={styles.buttonContainer}>\n            {activeIndex > 0 ? (\n              <TouchableItem\n                onPress={isRTL ? this.nextSlide : this.previousSlide}>\n                <View style={[styles.row, styles.leftButton]}>\n                  <Icon\n                    name={isRTL ? 'chevron-right' : 'chevron-left'}\n                    size={24}\n                    color={Colors.primaryColor}\n                  />\n                  <Text style={styles.buttonText}>{'back'.toUpperCase()}</Text>\n                </View>\n              </TouchableItem>\n            ) : (\n              <TouchableItem onPress={this.navigateTo('Welcome')}>\n                <View style={styles.actionButton}>\n                  <Text style={styles.buttonText}>{'skip'.toUpperCase()}</Text>\n                </View>\n              </TouchableItem>\n            )}\n          </View>\n\n          <View style={styles.row}>\n            {slides.map((item, i) => (\n              <View\n                key={`dot_${item.id}`}\n                style={[\n                  styles.dot,\n                  activeIndex === i ? styles.bgDark : styles.bgLight,\n                ]}\n              />\n            ))}\n          </View>\n\n          <View style={styles.buttonContainer}>\n            {activeIndex < slides.length - 1 ? (\n              <TouchableItem\n                onPress={isRTL ? this.previousSlide : this.nextSlide}>\n                <View style={[styles.row, styles.rightButton]}>\n                  <Text style={styles.buttonText}>{'next'.toUpperCase()}</Text>\n                  <Icon\n                    name={isRTL ? 'chevron-left' : 'chevron-right'}\n                    size={24}\n                    color={Colors.primaryColor}\n                  />\n                </View>\n              </TouchableItem>\n            ) : (\n              <TouchableItem onPress={this.navigateTo('Welcome')}>\n                <View style={styles.actionButton}>\n                  <Text style={styles.buttonText}>{'done'.toUpperCase()}</Text>\n                </View>\n              </TouchableItem>\n            )}\n          </View>\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}