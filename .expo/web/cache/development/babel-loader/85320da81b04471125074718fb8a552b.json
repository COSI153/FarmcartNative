{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/pickers/SizePicker.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextStyle } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from 'color';\nimport TouchableItem from \"../TouchableItem\";\nimport Colors from \"../../theme/colors\";\nvar PICKED_BACKGROUND_COLOR = Color(Colors.primaryColor).alpha(0.24);\nvar PICKED_TEXT_COLOR = Colors.primaryColorDark;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 6,\n    marginRight: 8,\n    height: 32,\n    borderRadius: 4,\n    backgroundColor: 'rgba(35, 47, 52, 0.08)',\n    overflow: 'hidden'\n  },\n  picker: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  title: {\n    top: -1,\n    color: 'rgb(35, 47, 52)',\n    paddingHorizontal: 12\n  }\n});\n\nvar SizePicker = function SizePicker(_ref) {\n  var activeOpacity = _ref.activeOpacity,\n      color = _ref.color,\n      onPress = _ref.onPress,\n      picked = _ref.picked,\n      title = _ref.title,\n      titleStyle = _ref.titleStyle;\n  return React.createElement(View, {\n    style: [styles.container, color && {\n      backgroundColor: color\n    }, picked && {\n      backgroundColor: PICKED_BACKGROUND_COLOR\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, React.createElement(TouchableItem, {\n    onPress: onPress,\n    activeOpacity: activeOpacity || 0.8,\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, titleStyle, picked && {\n      color: PICKED_TEXT_COLOR\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    }\n  }, title !== undefined ? title : 'Size'))));\n};\n\nexport default SizePicker;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/pickers/SizePicker.js"],"names":["React","TextStyle","Color","TouchableItem","Colors","PICKED_BACKGROUND_COLOR","primaryColor","alpha","PICKED_TEXT_COLOR","primaryColorDark","styles","StyleSheet","create","container","justifyContent","alignItems","marginVertical","marginRight","height","borderRadius","backgroundColor","overflow","picker","flex","title","top","color","paddingHorizontal","SizePicker","activeOpacity","onPress","picked","titleStyle","undefined"],"mappings":";AAQA,OAAOA,KAAP,MAAkB,OAAlB;;;SAC0BC,S;;AAC1B,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,aAAP;AAGA,OAAOC,MAAP;AAGA,IAAMC,uBAAuB,GAAGH,KAAK,CAACE,MAAM,CAACE,YAAR,CAAL,CAA2BC,KAA3B,CAAiC,IAAjC,CAAhC;AACA,IAAMC,iBAAiB,GAAGJ,MAAM,CAACK,gBAAjC;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,CAHP;AAITC,IAAAA,WAAW,EAAE,CAJJ;AAKTC,IAAAA,MAAM,EAAE,EALC;AAMTC,IAAAA,YAAY,EAAE,CANL;AAOTC,IAAAA,eAAe,EAAE,wBAPR;AAQTC,IAAAA,QAAQ,EAAE;AARD,GADoB;AAW/BC,EAAAA,MAAM,EAAE;AAACC,IAAAA,IAAI,EAAE,CAAP;AAAUT,IAAAA,cAAc,EAAE;AAA1B,GAXuB;AAY/BU,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,CAAC,CADD;AAELC,IAAAA,KAAK,EAAE,iBAFF;AAGLC,IAAAA,iBAAiB,EAAE;AAHd;AAZwB,CAAlB,CAAf;;AA8BA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MACjBC,aADiB,QACjBA,aADiB;AAAA,MAEjBH,KAFiB,QAEjBA,KAFiB;AAAA,MAGjBI,OAHiB,QAGjBA,OAHiB;AAAA,MAIjBC,MAJiB,QAIjBA,MAJiB;AAAA,MAKjBP,KALiB,QAKjBA,KALiB;AAAA,MAMjBQ,UANiB,QAMjBA,UANiB;AAAA,SAQjB,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLtB,MAAM,CAACG,SADF,EAELa,KAAK,IAAI;AAACN,MAAAA,eAAe,EAAEM;AAAlB,KAFJ,EAGLK,MAAM,IAAI;AAACX,MAAAA,eAAe,EAAEf;AAAlB,KAHL,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEyB,OADX;AAEE,IAAA,aAAa,EAAED,aAAa,IAAI,GAFlC;AAGE,IAAA,KAAK,EAAEnB,MAAM,CAACY,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLZ,MAAM,CAACc,KADF,EAELQ,UAFK,EAGLD,MAAM,IAAI;AAACL,MAAAA,KAAK,EAAElB;AAAR,KAHL,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGgB,KAAK,KAAKS,SAAV,GAAsBT,KAAtB,GAA8B,MANjC,CADF,CANF,CANF,CARiB;AAAA,CAAnB;;AAkCA,eAAeI,UAAf","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import node modules\nimport React from 'react';\nimport {StyleSheet, Text, TextStyle, View} from 'react-native';\nimport Color from 'color';\n\n// import components\nimport TouchableItem from '../TouchableItem';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// SizePicker Config\nconst PICKED_BACKGROUND_COLOR = Color(Colors.primaryColor).alpha(0.24);\nconst PICKED_TEXT_COLOR = Colors.primaryColorDark;\n\n// SizePicker Styles\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 6,\n    marginRight: 8,\n    height: 32,\n    borderRadius: 4,\n    backgroundColor: 'rgba(35, 47, 52, 0.08)',\n    overflow: 'hidden',\n  },\n  picker: {flex: 1, justifyContent: 'center'},\n  title: {\n    top: -1,\n    color: 'rgb(35, 47, 52)',\n    paddingHorizontal: 12,\n  },\n});\n\n// SizePicker Props\ntype Props = {\n  activeOpacity: number,\n  color: StyleProp,\n  onPress: () => void,\n  picked: boolean,\n  title: string,\n  titleStyle: TextStyle,\n};\n\n// SizePicker\nconst SizePicker = ({\n  activeOpacity,\n  color,\n  onPress,\n  picked,\n  title,\n  titleStyle,\n}: Props) => (\n  <View\n    style={[\n      styles.container,\n      color && {backgroundColor: color},\n      picked && {backgroundColor: PICKED_BACKGROUND_COLOR},\n    ]}>\n    <TouchableItem\n      onPress={onPress}\n      activeOpacity={activeOpacity || 0.8}\n      style={styles.picker}\n      // borderless\n    >\n      <View style={styles.picker}>\n        <Text\n          style={[\n            styles.title,\n            titleStyle,\n            picked && {color: PICKED_TEXT_COLOR},\n          ]}>\n          {title !== undefined ? title : 'Size'}\n        </Text>\n      </View>\n    </TouchableItem>\n  </View>\n);\n\nexport default SizePicker;\n"]},"metadata":{},"sourceType":"module"}