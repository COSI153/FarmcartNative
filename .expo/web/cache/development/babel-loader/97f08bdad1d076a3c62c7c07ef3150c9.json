{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/bottomsheet/BottomSheet.js\";\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  modalWrapper: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.52)'\n  },\n  scrim: {\n    flex: 1,\n    backgroundColor: 'transparent'\n  },\n  modalContainer: {\n    width: '100%',\n    backgroundColor: '#fff',\n    overflow: 'hidden'\n  },\n  roundedTop: {\n    borderTopLeftRadius: 22,\n    borderTopRightRadius: 22,\n    paddingTop: 8\n  }\n});\nvar SUPPORTED_ORIENTATIONS = ['portrait'];\n\nvar BottomSheet = function (_Component) {\n  _inherits(BottomSheet, _Component);\n\n  function BottomSheet(props) {\n    var _this;\n\n    _classCallCheck(this, BottomSheet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BottomSheet).call(this, props));\n    _this.state = {\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      pan: new Animated.ValueXY()\n    };\n\n    _this.createPanResponder();\n\n    return _this;\n  }\n\n  _createClass(BottomSheet, [{\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          animatedHeight = _this$state.animatedHeight,\n          pan = _this$state.pan;\n      var height = this.props.height;\n      var _this$props = this.props,\n          duration = _this$props.duration,\n          onClose = _this$props.onClose,\n          rounded = _this$props.rounded;\n      height = rounded ? height + 8 : height;\n\n      if (visible) {\n        this.setState({\n          modalVisible: visible\n        });\n        Animated.timing(animatedHeight, {\n          toValue: height,\n          duration: duration\n        }).start();\n      } else {\n        Animated.timing(animatedHeight, {\n          toValue: 0,\n          duration: duration\n        }).start(function () {\n          _this2.setState({\n            modalVisible: visible\n          });\n\n          pan.setValue({\n            x: 0,\n            y: 0\n          });\n\n          if (typeof onClose === 'function') {\n            onClose();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"createPanResponder\",\n    value: function createPanResponder() {\n      var _this3 = this;\n\n      var pan = this.state.pan;\n      var height = this.props.height;\n      var _this$props2 = this.props,\n          closeOnSwipeDown = _this$props2.closeOnSwipeDown,\n          rounded = _this$props2.rounded;\n      height = rounded ? height + 8 : height;\n      this.panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return closeOnSwipeDown;\n        },\n        onPanResponderMove: function onPanResponderMove(e, gestureState) {\n          if (gestureState.dy < 0) {\n            return null;\n          }\n\n          return Animated.event([null, {\n            dy: pan.y\n          }])(e, gestureState);\n        },\n        onPanResponderRelease: function onPanResponderRelease(e, gestureState) {\n          if (height / 4 - gestureState.dy < 0) {\n            _this3.setModalVisible(false);\n          } else {\n            Animated.spring(pan, {\n              toValue: {\n                x: 0,\n                y: 0\n              }\n            }).start();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.setModalVisible(true);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setModalVisible(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          animatedHeight = _this$state2.animatedHeight,\n          modalVisible = _this$state2.modalVisible,\n          pan = _this$state2.pan;\n      var _this$props3 = this.props,\n          closeOnPressScrim = _this$props3.closeOnPressScrim,\n          children = _this$props3.children,\n          modalWrapperStyle = _this$props3.modalWrapperStyle,\n          modalContainerStyle = _this$props3.modalContainerStyle,\n          rounded = _this$props3.rounded,\n          statusBarColor = _this$props3.statusBarColor;\n      var panStyle = {\n        transform: pan.getTranslateTransform()\n      };\n      return React.createElement(Modal, {\n        transparent: true,\n        animationType: \"none\",\n        visible: modalVisible,\n        supportedOrientations: SUPPORTED_ORIENTATIONS,\n        onRequestClose: function onRequestClose() {\n          _this4.setModalVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }, React.createElement(View, {\n        style: [styles.modalWrapper, modalWrapperStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: statusBarColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.scrim,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return closeOnPressScrim ? _this4.close() : {};\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      }), React.createElement(Animated.View, _extends({}, this.panResponder.panHandlers, {\n        style: [panStyle, styles.modalContainer, rounded && styles.roundedTop, modalContainerStyle, {\n          height: animatedHeight\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      }), children)));\n    }\n  }]);\n\n  return BottomSheet;\n}(Component);\n\nexport { BottomSheet as default };\nBottomSheet.defaultProps = {\n  closeOnPressScrim: true,\n  closeOnSwipeDown: true,\n  duration: 300,\n  height: 112,\n  modalWrapperStyle: {},\n  modalContainerStyle: {},\n  rounded: false,\n  statusBarColor: 'rgba(0, 0, 0, 0.52)'\n};","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/bottomsheet/BottomSheet.js"],"names":["React","Component","styles","StyleSheet","create","modalWrapper","flex","backgroundColor","scrim","modalContainer","width","overflow","roundedTop","borderTopLeftRadius","borderTopRightRadius","paddingTop","SUPPORTED_ORIENTATIONS","BottomSheet","props","state","modalVisible","animatedHeight","Animated","Value","pan","ValueXY","createPanResponder","visible","height","duration","onClose","rounded","setState","timing","toValue","start","setValue","x","y","closeOnSwipeDown","panResponder","PanResponder","onStartShouldSetPanResponder","onPanResponderMove","e","gestureState","dy","event","onPanResponderRelease","setModalVisible","spring","closeOnPressScrim","children","modalWrapperStyle","modalContainerStyle","statusBarColor","panStyle","transform","getTranslateTransform","close","panHandlers","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  Animated,\n  Modal,\n  PanResponder,\n  StatusBar,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\n// BottomSheet Styles\nconst styles = StyleSheet.create({\n  modalWrapper: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.52)',\n  },\n  scrim: {\n    flex: 1,\n    backgroundColor: 'transparent',\n  },\n  modalContainer: {\n    width: '100%',\n    backgroundColor: '#fff',\n    overflow: 'hidden',\n  },\n  roundedTop: {\n    borderTopLeftRadius: 22,\n    borderTopRightRadius: 22,\n    paddingTop: 8,\n  },\n});\n\n// BottomSheet Config\nconst SUPPORTED_ORIENTATIONS = ['portrait'];\n\n// BottomSheet\nexport default class BottomSheet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      pan: new Animated.ValueXY(),\n    };\n\n    this.createPanResponder();\n  }\n\n  setModalVisible(visible) {\n    const {animatedHeight, pan} = this.state;\n    let {height} = this.props;\n    const {duration, onClose, rounded} = this.props;\n\n    height = rounded ? height + 8 : height;\n\n    if (visible) {\n      this.setState({modalVisible: visible});\n      Animated.timing(animatedHeight, {\n        toValue: height,\n        duration,\n      }).start();\n    } else {\n      Animated.timing(animatedHeight, {\n        toValue: 0,\n        duration,\n      }).start(() => {\n        this.setState({modalVisible: visible});\n        pan.setValue({x: 0, y: 0});\n        if (typeof onClose === 'function') {\n          onClose();\n        }\n      });\n    }\n  }\n\n  createPanResponder() {\n    const {pan} = this.state;\n    let {height} = this.props;\n    const {closeOnSwipeDown, rounded} = this.props;\n\n    height = rounded ? height + 8 : height;\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => closeOnSwipeDown,\n      onPanResponderMove: (e, gestureState) => {\n        if (gestureState.dy < 0) {\n          return null;\n        }\n        return Animated.event([null, {dy: pan.y}])(e, gestureState);\n      },\n      onPanResponderRelease: (e, gestureState) => {\n        if (height / 4 - gestureState.dy < 0) {\n          this.setModalVisible(false);\n        } else {\n          Animated.spring(pan, {toValue: {x: 0, y: 0}}).start();\n        }\n      },\n    });\n  }\n\n  open() {\n    this.setModalVisible(true);\n  }\n\n  close() {\n    this.setModalVisible(false);\n  }\n\n  render() {\n    const {animatedHeight, modalVisible, pan} = this.state;\n    const {\n      closeOnPressScrim,\n      children,\n      modalWrapperStyle,\n      modalContainerStyle,\n      rounded,\n      statusBarColor,\n    } = this.props;\n\n    const panStyle = {\n      transform: pan.getTranslateTransform(),\n    };\n\n    return (\n      <Modal\n        transparent\n        animationType=\"none\"\n        visible={modalVisible}\n        supportedOrientations={SUPPORTED_ORIENTATIONS}\n        onRequestClose={() => {\n          this.setModalVisible(false);\n        }}>\n        <View style={[styles.modalWrapper, modalWrapperStyle]}>\n          <StatusBar backgroundColor={statusBarColor} />\n\n          <TouchableOpacity\n            style={styles.scrim}\n            activeOpacity={1}\n            onPress={() => (closeOnPressScrim ? this.close() : {})}\n          />\n          <Animated.View\n            {...this.panResponder.panHandlers}\n            style={[\n              panStyle,\n              styles.modalContainer,\n              rounded && styles.roundedTop,\n              modalContainerStyle,\n              {height: animatedHeight},\n            ]}>\n            {children}\n          </Animated.View>\n        </View>\n      </Modal>\n    );\n  }\n}\n\n// BottomSheet Props\nBottomSheet.defaultProps = {\n  closeOnPressScrim: true,\n  closeOnSwipeDown: true,\n  duration: 300,\n  height: 112,\n  modalWrapperStyle: {},\n  modalContainerStyle: {},\n  rounded: false,\n  statusBarColor: 'rgba(0, 0, 0, 0.52)',\n};\n"]},"metadata":{},"sourceType":"module"}