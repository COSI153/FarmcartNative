{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/navigation/HomeNavigatorA.js\";\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\nimport TabBadgeIcon from \"../components/navigation/TabBadgeIcon\";\nimport Home from \"../screens/home/HomeA\";\nimport Search from \"../screens/search/SearchA\";\nimport Favorites from \"../screens/favorites/FavoritesA\";\nimport Cart from \"../screens/cart/CartA\";\nimport Settings from \"../screens/settings/SettingsA\";\nimport Colors from \"../theme/colors\";\nvar Tab = createBottomTabNavigator();\n\nfunction HomeNavigator() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    backBehavior: \"initialRoute\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              focused = _ref2.focused,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = \"home\" + (focused ? '' : '-outline');\n          } else if (route.name === 'Search') {\n            iconName = 'magnify';\n          } else if (route.name === 'Favorites') {\n            iconName = \"star\" + (focused ? '' : '-outline');\n          } else if (route.name === 'Settings') {\n            iconName = \"settings\" + (focused ? '' : '-outline');\n          }\n\n          return React.createElement(Icon, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      keyboardHidesTabBar: true,\n      activeTintColor: Colors.primaryColor,\n      inactiveTintColor: Colors.secondaryText,\n      showLabel: false,\n      style: {\n        backgroundColor: Colors.surface\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Cart\",\n    component: Cart,\n    options: {\n      tabBarIcon: function tabBarIcon(props) {\n        return React.createElement(TabBadgeIcon, _extends({\n          name: \"cart\" + (props.focused ? '' : '-outline'),\n          badgeCount: 5\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          }\n        }));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Favorites\",\n    component: Favorites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: Settings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    }\n  }));\n}\n\nexport default HomeNavigator;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/navigation/HomeNavigatorA.js"],"names":["React","createBottomTabNavigator","MaterialCommunityIcons","Icon","TabBadgeIcon","Home","Search","Favorites","Cart","Settings","Colors","Tab","HomeNavigator","route","tabBarIcon","color","focused","size","iconName","name","keyboardHidesTabBar","activeTintColor","primaryColor","inactiveTintColor","secondaryText","showLabel","style","backgroundColor","surface","props"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {MaterialCommunityIcons as Icon} from '@expo/vector-icons';\n\n// import components\nimport TabBadgeIcon from '../components/navigation/TabBadgeIcon';\n\n// import Home screen\nimport Home from '../screens/home/HomeA';\n\n// import Search screen\nimport Search from '../screens/search/SearchA';\n\n// import Favorites screen\nimport Favorites from '../screens/favorites/FavoritesA';\n\n// import Cart screen\nimport Cart from '../screens/cart/CartA';\n\n// import Settings screen\nimport Settings from '../screens/settings/SettingsA';\n\n// import colors\nimport Colors from '../theme/colors';\n\n// HomeNavigator Config\n\ntype Props = {\n  color: string,\n  focused: string,\n  size: number,\n};\n\n// create bottom tab navigator\nconst Tab = createBottomTabNavigator();\n\n// HomeNavigator\nfunction HomeNavigator() {\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Home\"\n      backBehavior=\"initialRoute\"\n      screenOptions={({route}) => ({\n        tabBarIcon: ({color, focused, size}: Props) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = `home${focused ? '' : '-outline'}`;\n          } else if (route.name === 'Search') {\n            iconName = 'magnify';\n          } else if (route.name === 'Favorites') {\n            iconName = `star${focused ? '' : '-outline'}`;\n          } else if (route.name === 'Settings') {\n            iconName = `settings${focused ? '' : '-outline'}`;\n          }\n\n          // You can return any component that you like here!\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        keyboardHidesTabBar: true,\n        activeTintColor: Colors.primaryColor,\n        inactiveTintColor: Colors.secondaryText,\n        showLabel: false, // hide labels\n        style: {\n          backgroundColor: Colors.surface, // TabBar background\n        },\n      }}>\n      <Tab.Screen name=\"Home\" component={Home} />\n      <Tab.Screen name=\"Search\" component={Search} />\n      <Tab.Screen\n        name=\"Cart\"\n        component={Cart}\n        options={{\n          tabBarIcon: props => (\n            <TabBadgeIcon\n              name={`cart${props.focused ? '' : '-outline'}`}\n              badgeCount={5}\n              {...props}\n            />\n          ),\n        }}\n      />\n      <Tab.Screen name=\"Favorites\" component={Favorites} />\n      <Tab.Screen name=\"Settings\" component={Settings} />\n    </Tab.Navigator>\n  );\n}\n\nexport default HomeNavigator;\n"]},"metadata":{},"sourceType":"module"}