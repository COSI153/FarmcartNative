{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/signin/SignInB.js\";\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport ContainedButton from \"../../components/buttons/ContainedButton\";\nimport GradientContainer from \"../../components/gradientcontainer/GradientContainer\";\nimport UnderlinePasswordInput from \"../../components/textinputs/UnderlinePasswordInput\";\nimport UnderlineTextInput from \"../../components/textinputs/UnderlineTextInput\";\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\nvar PLACEHOLDER_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\nvar INPUT_TEXT_COLOR = '#fff';\nvar INPUT_BORDER_COLOR = 'rgba(255, 255, 255, 0.4)';\nvar INPUT_FOCUSED_BORDER_COLOR = '#fff';\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1\n  },\n  contentContainerStyle: {\n    flex: 1\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  form: {\n    paddingHorizontal: Layout.LARGE_PADDING\n  },\n  inputContainer: {\n    marginBottom: 7\n  },\n  buttonContainer: {\n    paddingTop: 23\n  },\n  forgotPassword: {\n    paddingVertical: 23\n  },\n  forgotPasswordText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.white,\n    textAlign: 'center'\n  },\n  separator: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  line: {\n    width: 64,\n    height: 1,\n    backgroundColor: INPUT_BORDER_COLOR\n  },\n  orText: {\n    top: -2,\n    paddingHorizontal: 8,\n    color: PLACEHOLDER_TEXT_COLOR\n  },\n  buttonsGroup: {\n    paddingTop: 23\n  },\n  vSpacer: {\n    height: 15\n  },\n  footer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    width: '100%'\n  },\n  termsContainer: {\n    flexDirection: 'row'\n  },\n  footerText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.white\n  },\n  footerLink: {\n    fontWeight: '400',\n    textDecorationLine: 'underline'\n  }\n});\n\nvar SignInB = function (_Component) {\n  _inherits(SignInB, _Component);\n\n  function SignInB(props) {\n    var _this;\n\n    _classCallCheck(this, SignInB);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInB).call(this, props));\n\n    _this.emailChange = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.emailFocus = function () {\n      _this.setState({\n        emailFocused: true,\n        passwordFocused: false\n      });\n    };\n\n    _this.passwordChange = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.passwordFocus = function () {\n      _this.setState({\n        passwordFocused: true,\n        emailFocused: false\n      });\n    };\n\n    _this.onTogglePress = function () {\n      var secureTextEntry = _this.state.secureTextEntry;\n\n      _this.setState({\n        secureTextEntry: !secureTextEntry\n      });\n    };\n\n    _this.focusOn = function (nextFiled) {\n      return function () {\n        if (nextFiled) {\n          nextFiled.focus();\n        }\n      };\n    };\n\n    _this.navigateTo = function (screen) {\n      return function () {\n        var navigation = _this.props.navigation;\n        navigation.navigate(screen);\n      };\n    };\n\n    _this.signIn = function () {\n      _this.setState({\n        emailFocused: false,\n        passwordFocused: false\n      }, _this.navigateTo('HomeNavigator'));\n    };\n\n    _this.state = {\n      email: '',\n      emailFocused: false,\n      password: '',\n      passwordFocused: false,\n      secureTextEntry: true\n    };\n    return _this;\n  }\n\n  _createClass(SignInB, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          emailFocused = _this$state.emailFocused,\n          password = _this$state.password,\n          passwordFocused = _this$state.passwordFocused,\n          secureTextEntry = _this$state.secureTextEntry;\n      return React.createElement(GradientContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Colors.primaryColor,\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.screenContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        contentContainerStyle: styles.contentContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.email = r;\n        },\n        onChangeText: this.emailChange,\n        onFocus: this.emailFocus,\n        inputFocused: emailFocused,\n        onSubmitEditing: this.focusOn(this.password),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        keyboardType: \"email-address\",\n        placeholder: \"E-mail or phone number\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        inputContainerStyle: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }), React.createElement(UnderlinePasswordInput, {\n        onRef: function onRef(r) {\n          _this2.password = r;\n        },\n        onChangeText: this.passwordChange,\n        onFocus: this.passwordFocus,\n        inputFocused: passwordFocused,\n        onSubmitEditing: this.signIn,\n        returnKeyType: \"go\",\n        placeholder: \"Password\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        secureTextEntry: secureTextEntry,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        toggleVisible: password.length > 0,\n        toggleText: secureTextEntry ? 'Show' : 'Hide',\n        onTogglePress: this.onTogglePress,\n        inputContainerStyle: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        }\n      }), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        }\n      }, React.createElement(ContainedButton, {\n        onPress: this.signIn,\n        color: Colors.accentColor,\n        title: 'Sign in'.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        }\n      })), React.createElement(View, {\n        style: styles.forgotPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      }, React.createElement(Text, {\n        onPress: this.navigateTo('ForgotPassword'),\n        style: styles.forgotPasswordText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        }\n      }, \"Forgot password?\")), React.createElement(View, {\n        style: styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        }\n      }, React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        }\n      }), React.createElement(Text, {\n        style: styles.orText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        }\n      }, \"or\"), React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        }\n      })), React.createElement(View, {\n        style: styles.buttonsGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        }\n      }, React.createElement(ContainedButton, {\n        onPress: this.signIn,\n        color: Colors.surface,\n        socialIconName: \"facebook-square\",\n        iconColor: \"#3b5998\",\n        title: \"Sign in with Facebook\",\n        titleColor: \"#3b5998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        }\n      }), React.createElement(View, {\n        style: styles.vSpacer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        }\n      }), React.createElement(ContainedButton, {\n        onPress: this.signIn,\n        color: Colors.surface,\n        socialIconName: \"google\",\n        iconColor: \"#db4437\",\n        title: \"Sign in with Google\",\n        titleColor: \"#db4437\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.navigateTo('TermsConditions'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        }\n      }, React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        }\n      }, \"By signing in, you accepts our\"), React.createElement(View, {\n        style: styles.termsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        }\n      }, React.createElement(Text, {\n        style: [styles.footerText, styles.footerLink],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        }\n      }, \"Terms & Conditions\"), React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        }\n      }, \" and \"), React.createElement(Text, {\n        style: [styles.footerText, styles.footerLink],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        }\n      }, \"Privacy Policy\"), React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        }\n      }, \".\"))))))));\n    }\n  }]);\n\n  return SignInB;\n}(Component);\n\nexport { SignInB as default };","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/signin/SignInB.js"],"names":["React","Component","KeyboardAwareScrollView","ContainedButton","GradientContainer","UnderlinePasswordInput","UnderlineTextInput","Colors","Layout","PLACEHOLDER_TEXT_COLOR","INPUT_TEXT_COLOR","INPUT_BORDER_COLOR","INPUT_FOCUSED_BORDER_COLOR","styles","StyleSheet","create","screenContainer","flex","contentContainerStyle","content","justifyContent","form","paddingHorizontal","LARGE_PADDING","inputContainer","marginBottom","buttonContainer","paddingTop","forgotPassword","paddingVertical","forgotPasswordText","fontWeight","fontSize","color","white","textAlign","separator","flexDirection","alignItems","line","width","height","backgroundColor","orText","top","buttonsGroup","vSpacer","footer","padding","termsContainer","footerText","footerLink","textDecorationLine","SignInB","props","emailChange","text","setState","email","emailFocus","emailFocused","passwordFocused","passwordChange","password","passwordFocus","onTogglePress","secureTextEntry","state","focusOn","nextFiled","focus","navigateTo","screen","navigation","navigate","signIn","primaryColor","r","length","accentColor","toUpperCase","surface"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';\n\n// import components\nimport ContainedButton from '../../components/buttons/ContainedButton';\nimport GradientContainer from '../../components/gradientcontainer/GradientContainer';\nimport UnderlinePasswordInput from '../../components/textinputs/UnderlinePasswordInput';\nimport UnderlineTextInput from '../../components/textinputs/UnderlineTextInput';\n\n// import colors, layout\nimport Colors from '../../theme/colors';\nimport Layout from '../../theme/layout';\n\n// SignInB Config\nconst PLACEHOLDER_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\nconst INPUT_TEXT_COLOR = '#fff';\nconst INPUT_BORDER_COLOR = 'rgba(255, 255, 255, 0.4)';\nconst INPUT_FOCUSED_BORDER_COLOR = '#fff';\n\n// SignInB Styles\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n  },\n  contentContainerStyle: {flex: 1},\n  content: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n  form: {\n    paddingHorizontal: Layout.LARGE_PADDING,\n  },\n  inputContainer: {marginBottom: 7},\n  buttonContainer: {\n    paddingTop: 23,\n  },\n  forgotPassword: {\n    paddingVertical: 23,\n  },\n  forgotPasswordText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.white,\n    textAlign: 'center',\n  },\n  separator: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  line: {\n    width: 64,\n    height: 1,\n    backgroundColor: INPUT_BORDER_COLOR,\n  },\n  orText: {\n    top: -2,\n    paddingHorizontal: 8,\n    color: PLACEHOLDER_TEXT_COLOR,\n  },\n  buttonsGroup: {\n    paddingTop: 23,\n  },\n  vSpacer: {\n    height: 15,\n  },\n  footer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    width: '100%',\n  },\n  termsContainer: {\n    flexDirection: 'row',\n  },\n  footerText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.white,\n  },\n  footerLink: {\n    fontWeight: '400',\n    textDecorationLine: 'underline',\n  },\n});\n\n// SignInB\nexport default class SignInB extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      emailFocused: false,\n      password: '',\n      passwordFocused: false,\n      secureTextEntry: true,\n    };\n  }\n\n  emailChange = text => {\n    this.setState({\n      email: text,\n    });\n  };\n\n  emailFocus = () => {\n    this.setState({\n      emailFocused: true,\n      passwordFocused: false,\n    });\n  };\n\n  passwordChange = text => {\n    this.setState({\n      password: text,\n    });\n  };\n\n  passwordFocus = () => {\n    this.setState({\n      passwordFocused: true,\n      emailFocused: false,\n    });\n  };\n\n  onTogglePress = () => {\n    const {secureTextEntry} = this.state;\n    this.setState({\n      secureTextEntry: !secureTextEntry,\n    });\n  };\n\n  focusOn = nextFiled => () => {\n    if (nextFiled) {\n      nextFiled.focus();\n    }\n  };\n\n  navigateTo = screen => () => {\n    const {navigation} = this.props;\n    navigation.navigate(screen);\n  };\n\n  signIn = () => {\n    this.setState(\n      {\n        emailFocused: false,\n        passwordFocused: false,\n      },\n      this.navigateTo('HomeNavigator'),\n    );\n  };\n\n  render() {\n    const {\n      email,\n      emailFocused,\n      password,\n      passwordFocused,\n      secureTextEntry,\n    } = this.state;\n\n    return (\n      <GradientContainer>\n        <StatusBar\n          backgroundColor={Colors.primaryColor}\n          barStyle=\"light-content\"\n        />\n\n        <SafeAreaView style={styles.screenContainer}>\n          <KeyboardAwareScrollView\n            contentContainerStyle={styles.contentContainerStyle}>\n            <View style={styles.content}>\n              <View />\n\n              <View style={styles.form}>\n                <UnderlineTextInput\n                  onRef={r => {\n                    this.email = r;\n                  }}\n                  onChangeText={this.emailChange}\n                  onFocus={this.emailFocus}\n                  inputFocused={emailFocused}\n                  onSubmitEditing={this.focusOn(this.password)}\n                  returnKeyType=\"next\"\n                  blurOnSubmit={false}\n                  keyboardType=\"email-address\"\n                  placeholder=\"E-mail or phone number\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                  inputContainerStyle={styles.inputContainer}\n                />\n\n                <UnderlinePasswordInput\n                  onRef={r => {\n                    this.password = r;\n                  }}\n                  onChangeText={this.passwordChange}\n                  onFocus={this.passwordFocus}\n                  inputFocused={passwordFocused}\n                  onSubmitEditing={this.signIn}\n                  returnKeyType=\"go\"\n                  placeholder=\"Password\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  secureTextEntry={secureTextEntry}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                  toggleVisible={password.length > 0}\n                  toggleText={secureTextEntry ? 'Show' : 'Hide'}\n                  onTogglePress={this.onTogglePress}\n                  inputContainerStyle={styles.inputContainer}\n                />\n\n                <View style={styles.buttonContainer}>\n                  <ContainedButton\n                    onPress={this.signIn}\n                    color={Colors.accentColor}\n                    title={'Sign in'.toUpperCase()}\n                  />\n                </View>\n\n                <View style={styles.forgotPassword}>\n                  <Text\n                    onPress={this.navigateTo('ForgotPassword')}\n                    style={styles.forgotPasswordText}>\n                    Forgot password?\n                  </Text>\n                </View>\n\n                <View style={styles.separator}>\n                  <View style={styles.line} />\n                  <Text style={styles.orText}>or</Text>\n                  <View style={styles.line} />\n                </View>\n\n                <View style={styles.buttonsGroup}>\n                  <ContainedButton\n                    onPress={this.signIn}\n                    color={Colors.surface}\n                    socialIconName=\"facebook-square\"\n                    iconColor=\"#3b5998\"\n                    title=\"Sign in with Facebook\"\n                    titleColor=\"#3b5998\"\n                  />\n                  <View style={styles.vSpacer} />\n                  <ContainedButton\n                    onPress={this.signIn}\n                    color={Colors.surface}\n                    socialIconName=\"google\"\n                    iconColor=\"#db4437\"\n                    title=\"Sign in with Google\"\n                    titleColor=\"#db4437\"\n                  />\n                </View>\n              </View>\n\n              <TouchableWithoutFeedback\n                onPress={this.navigateTo('TermsConditions')}>\n                <View style={styles.footer}>\n                  <Text style={styles.footerText}>\n                    By signing in, you accepts our\n                  </Text>\n                  <View style={styles.termsContainer}>\n                    <Text style={[styles.footerText, styles.footerLink]}>\n                      Terms & Conditions\n                    </Text>\n                    <Text style={styles.footerText}> and </Text>\n                    <Text style={[styles.footerText, styles.footerLink]}>\n                      Privacy Policy\n                    </Text>\n                    <Text style={styles.footerText}>.</Text>\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </View>\n          </KeyboardAwareScrollView>\n        </SafeAreaView>\n      </GradientContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}