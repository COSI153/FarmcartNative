{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/textinputs/UnderlineTextInput.js\";\nimport React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewStyle } from \"react-native-web/dist/index\";\nimport Colors from \"../../theme/colors\";\nvar isRTL = I18nManager.isRTL;\nvar INPUT_HEIGHT = 44;\nvar INPUT_WIDTH = '100%';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n    borderBottomWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.2)',\n    width: INPUT_WIDTH\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 0,\n    height: INPUT_HEIGHT,\n    fontSize: 16,\n    color: Colors.primaryText,\n    textAlign: isRTL ? 'right' : 'left'\n  }\n});\n\nvar UnderlineTextInput = function UnderlineTextInput(_ref) {\n  var _ref$onRef = _ref.onRef,\n      onRef = _ref$onRef === void 0 ? function () {} : _ref$onRef,\n      onChangeText = _ref.onChangeText,\n      onFocus = _ref.onFocus,\n      inputFocused = _ref.inputFocused,\n      onSubmitEditing = _ref.onSubmitEditing,\n      returnKeyType = _ref.returnKeyType,\n      blurOnSubmit = _ref.blurOnSubmit,\n      onKeyPress = _ref.onKeyPress,\n      keyboardType = _ref.keyboardType,\n      _ref$autoCapitalize = _ref.autoCapitalize,\n      autoCapitalize = _ref$autoCapitalize === void 0 ? 'none' : _ref$autoCapitalize,\n      maxLength = _ref.maxLength,\n      placeholder = _ref.placeholder,\n      placeholderTextColor = _ref.placeholderTextColor,\n      value = _ref.value,\n      inputTextColor = _ref.inputTextColor,\n      secureTextEntry = _ref.secureTextEntry,\n      borderColor = _ref.borderColor,\n      focusedBorderColor = _ref.focusedBorderColor,\n      inputContainerStyle = _ref.inputContainerStyle,\n      inputStyle = _ref.inputStyle;\n  return React.createElement(View, {\n    style: [styles.container, borderColor && {\n      borderColor: borderColor\n    }, inputFocused && {\n      borderColor: focusedBorderColor\n    }, inputContainerStyle && inputContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    }\n  }, React.createElement(TextInput, {\n    ref: function ref(r) {\n      return onRef(r);\n    },\n    onChangeText: onChangeText,\n    onFocus: onFocus,\n    inputFocused: inputFocused,\n    onSubmitEditing: onSubmitEditing,\n    returnKeyType: returnKeyType,\n    blurOnSubmit: blurOnSubmit,\n    onKeyPress: onKeyPress,\n    keyboardType: keyboardType,\n    autoCapitalize: autoCapitalize,\n    maxLength: maxLength,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    value: value,\n    secureTextEntry: secureTextEntry,\n    style: [styles.textInput, inputTextColor && {\n      color: inputTextColor\n    }, inputStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    }\n  }));\n};\n\nexport default UnderlineTextInput;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/textinputs/UnderlineTextInput.js"],"names":["React","ViewStyle","Colors","isRTL","I18nManager","INPUT_HEIGHT","INPUT_WIDTH","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","marginTop","paddingVertical","paddingHorizontal","borderBottomWidth","borderColor","width","textInput","flex","height","fontSize","color","primaryText","textAlign","UnderlineTextInput","onRef","onChangeText","onFocus","inputFocused","onSubmitEditing","returnKeyType","blurOnSubmit","onKeyPress","keyboardType","autoCapitalize","maxLength","placeholder","placeholderTextColor","value","inputTextColor","secureTextEntry","focusedBorderColor","inputContainerStyle","inputStyle","r"],"mappings":";AAQA,OAAOA,KAAP,MAAkB,OAAlB;;;;;SAMEC,S;AAIF,OAAOC,MAAP;AAGA,IAAMC,KAAK,GAAGC,WAAW,CAACD,KAA1B;AACA,IAAME,YAAY,GAAG,EAArB;AACA,IAAMC,WAAW,GAAG,MAApB;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,cAAc,EAAE,eAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,SAAS,EAAE,CAJF;AAKTC,IAAAA,eAAe,EAAE,CALR;AAMTC,IAAAA,iBAAiB,EAAE,CANV;AAOTC,IAAAA,iBAAiB,EAAE,CAPV;AAQTC,IAAAA,WAAW,EAAE,oBARJ;AASTC,IAAAA,KAAK,EAAEb;AATE,GADoB;AAY/Bc,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETL,IAAAA,iBAAiB,EAAE,CAFV;AAGTM,IAAAA,MAAM,EAAEjB,YAHC;AAITkB,IAAAA,QAAQ,EAAE,EAJD;AAKTC,IAAAA,KAAK,EAAEtB,MAAM,CAACuB,WALL;AAMTC,IAAAA,SAAS,EAAEvB,KAAK,GAAG,OAAH,GAAa;AANpB;AAZoB,CAAlB,CAAf;;AAqDA,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,wBACzBC,KADyB;AAAA,MACzBA,KADyB,2BACjB,YAAM,CAAE,CADS;AAAA,MAEzBC,YAFyB,QAEzBA,YAFyB;AAAA,MAGzBC,OAHyB,QAGzBA,OAHyB;AAAA,MAIzBC,YAJyB,QAIzBA,YAJyB;AAAA,MAKzBC,eALyB,QAKzBA,eALyB;AAAA,MAMzBC,aANyB,QAMzBA,aANyB;AAAA,MAOzBC,YAPyB,QAOzBA,YAPyB;AAAA,MAQzBC,UARyB,QAQzBA,UARyB;AAAA,MASzBC,YATyB,QASzBA,YATyB;AAAA,iCAUzBC,cAVyB;AAAA,MAUzBA,cAVyB,oCAUR,MAVQ;AAAA,MAWzBC,SAXyB,QAWzBA,SAXyB;AAAA,MAYzBC,WAZyB,QAYzBA,WAZyB;AAAA,MAazBC,oBAbyB,QAazBA,oBAbyB;AAAA,MAczBC,KAdyB,QAczBA,KAdyB;AAAA,MAezBC,cAfyB,QAezBA,cAfyB;AAAA,MAgBzBC,eAhByB,QAgBzBA,eAhByB;AAAA,MAiBzBzB,WAjByB,QAiBzBA,WAjByB;AAAA,MAkBzB0B,kBAlByB,QAkBzBA,kBAlByB;AAAA,MAmBzBC,mBAnByB,QAmBzBA,mBAnByB;AAAA,MAoBzBC,UApByB,QAoBzBA,UApByB;AAAA,SAsBzB,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLvC,MAAM,CAACG,SADF,EAELQ,WAAW,IAAI;AAACA,MAAAA,WAAW,EAAXA;AAAD,KAFV,EAGLa,YAAY,IAAI;AAACb,MAAAA,WAAW,EAAE0B;AAAd,KAHX,EAILC,mBAAmB,IAAIA,mBAJlB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAE,aAACE,CAAD;AAAA,aAAOnB,KAAK,CAACmB,CAAD,CAAZ;AAAA,KADP;AAEE,IAAA,YAAY,EAAElB,YAFhB;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,eAAe,EAAEC,eALnB;AAME,IAAA,aAAa,EAAEC,aANjB;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,UAAU,EAAEC,UARd;AASE,IAAA,YAAY,EAAEC,YAThB;AAUE,IAAA,cAAc,EAAEC,cAVlB;AAWE,IAAA,SAAS,EAAEC,SAXb;AAYE,IAAA,WAAW,EAAEC,WAZf;AAaE,IAAA,oBAAoB,EAAEC,oBAbxB;AAcE,IAAA,KAAK,EAAEC,KAdT;AAeE,IAAA,eAAe,EAAEE,eAfnB;AAgBE,IAAA,KAAK,EAAE,CACLpC,MAAM,CAACa,SADF,EAELsB,cAAc,IAAI;AAAClB,MAAAA,KAAK,EAAEkB;AAAR,KAFb,EAGLI,UAHK,CAhBT;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAtByB;AAAA,CAA3B;;AAsDA,eAAenB,kBAAf","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {\n  I18nManager,\n  StyleSheet,\n  TextInput,\n  View,\n  ViewStyle,\n} from 'react-native';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// UnderlineTextInput Config\nconst isRTL = I18nManager.isRTL;\nconst INPUT_HEIGHT = 44;\nconst INPUT_WIDTH = '100%';\n\n// UnderlineTextInput Styles\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n    borderBottomWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.2)',\n    width: INPUT_WIDTH,\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 0,\n    height: INPUT_HEIGHT,\n    fontSize: 16,\n    color: Colors.primaryText,\n    textAlign: isRTL ? 'right' : 'left',\n  },\n});\n\n// UnderlineTextInput Props\ntype Props = {\n  onRef: () => {},\n  onChangeText: () => {},\n  onFocus: () => {},\n  inputFocused: boolean,\n  onSubmitEditing: () => {},\n  returnKeyType: 'done' | 'go' | 'next' | 'search' | 'send',\n  blurOnSubmit: boolean,\n  onKeyPress: () => {},\n  keyboardType:\n    | 'default'\n    | 'number-pad'\n    | 'decimal-pad'\n    | 'numeric'\n    | 'email-address'\n    | 'phone-pad',\n  autoCapitalize: 'none' | 'sentences' | 'words' | 'characters',\n  maxLength: number,\n  placeholder: string,\n  placeholderTextColor: string,\n  value: string,\n  inputTextColor: string,\n  secureTextEntry: boolean,\n  borderColor: string,\n  focusedBorderColor: string,\n  inputContainerStyle: ViewStyle,\n  inputStyle: ViewStyle,\n};\n\n// UnderlineTextInput\nconst UnderlineTextInput = ({\n  onRef = () => {},\n  onChangeText,\n  onFocus,\n  inputFocused,\n  onSubmitEditing,\n  returnKeyType,\n  blurOnSubmit,\n  onKeyPress,\n  keyboardType,\n  autoCapitalize = 'none',\n  maxLength,\n  placeholder,\n  placeholderTextColor,\n  value,\n  inputTextColor,\n  secureTextEntry,\n  borderColor,\n  focusedBorderColor,\n  inputContainerStyle,\n  inputStyle,\n}: Props) => (\n  <View\n    style={[\n      styles.container,\n      borderColor && {borderColor},\n      inputFocused && {borderColor: focusedBorderColor},\n      inputContainerStyle && inputContainerStyle,\n    ]}>\n    <TextInput\n      ref={(r) => onRef(r)}\n      onChangeText={onChangeText}\n      onFocus={onFocus}\n      inputFocused={inputFocused}\n      onSubmitEditing={onSubmitEditing}\n      returnKeyType={returnKeyType}\n      blurOnSubmit={blurOnSubmit}\n      onKeyPress={onKeyPress}\n      keyboardType={keyboardType}\n      autoCapitalize={autoCapitalize}\n      maxLength={maxLength}\n      placeholder={placeholder}\n      placeholderTextColor={placeholderTextColor}\n      value={value}\n      secureTextEntry={secureTextEntry}\n      style={[\n        styles.textInput,\n        inputTextColor && {color: inputTextColor},\n        inputStyle,\n      ]}\n    />\n  </View>\n);\n\nexport default UnderlineTextInput;\n"]},"metadata":{},"sourceType":"module"}