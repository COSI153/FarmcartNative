{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/phoebe0_o/Desktop/FarmcartNative/App.js\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { enableScreens } from 'react-native-screens';\nimport ListingDetailScreen from \"./src/screens/product/ListingDetailScreen\";\nimport MessageScreen from \"./src/screens/message/MessageScreen\";\nimport ProductDetail from \"./src/screens/product/ProductDetail\";\nimport ImageInput from \"./src/components/ImageInput\";\nimport * as ImagePicker from 'expo-image-picker';\nenableScreens();\nimport MainNavigator from \"./src/navigation/MainNavigator\";\nimport View from \"react-native-web/dist/exports/View\";\n\nfunction App() {\n  var requestAccessingPhotos = function requestAccessingPhotos() {\n    var result;\n    return _regeneratorRuntime.async(function requestAccessingPhotos$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            result = _context.sent;\n            if (!result.granted) alert('You need to enable permission of getting access to photo library');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestAccessingPhotos();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/phoebe0_o/Desktop/FarmcartNative/App.js"],"names":["React","useEffect","SafeAreaProvider","enableScreens","ListingDetailScreen","MessageScreen","ProductDetail","ImageInput","ImagePicker","MainNavigator","App","requestAccessingPhotos","requestCameraRollPermissionsAsync","result","granted","alert"],"mappings":";;AAQA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,gBAAR,QAA+B,gCAA/B;AACA,SAAQC,aAAR,QAA4B,sBAA5B;AACA,OAAOC,mBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACAL,aAAa;AAEb,OAAOM,aAAP;;;AAIA,SAASC,GAAT,GAAe;AACb,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRH,WAAW,CAACI,iCAAZ,EADQ;;AAAA;AACvBC,YAAAA,MADuB;AAE7B,gBAAI,CAACA,MAAM,CAACC,OAAZ,EACEC,KAAK,CAAC,kEAAD,CAAL;;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAKAd,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeD,GAAf","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport 'react-native-gesture-handler';\nimport React, {useEffect} from 'react';\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\nimport {enableScreens} from 'react-native-screens';\nimport ListingDetailScreen from './src/screens/product/ListingDetailScreen';\nimport MessageScreen from './src/screens/message/MessageScreen';\nimport ProductDetail from './src/screens/product/ProductDetail';\nimport ImageInput from './src/components/ImageInput';\nimport * as ImagePicker from 'expo-image-picker';\nenableScreens();\n\nimport MainNavigator from './src/navigation/MainNavigator';\nimport {View} from 'react-native';\n\n// APP\nfunction App() {\n  const requestAccessingPhotos = async () => {\n    const result = await ImagePicker.requestCameraRollPermissionsAsync();\n    if (!result.granted)\n      alert('You need to enable permission of getting access to photo library');\n  };\n  useEffect(() => {\n    requestAccessingPhotos();\n  }, []);\n  return <View></View>;\n}\n\nexport default App;\n\n// <SafeAreaProvider>\n// <MainNavigator />\n//</SafeAreaProvider>\n"]},"metadata":{},"sourceType":"module"}