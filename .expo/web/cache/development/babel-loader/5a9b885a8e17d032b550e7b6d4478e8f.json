{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/signup/SignUpB.js\";\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport ContainedButton from \"../../components/buttons/ContainedButton\";\nimport GradientContainer from \"../../components/gradientcontainer/GradientContainer\";\nimport UnderlinePasswordInput from \"../../components/textinputs/UnderlinePasswordInput\";\nimport UnderlineTextInput from \"../../components/textinputs/UnderlineTextInput\";\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\nvar PLACEHOLDER_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\nvar INPUT_TEXT_COLOR = '#fff';\nvar INPUT_BORDER_COLOR = 'rgba(255, 255, 255, 0.4)';\nvar INPUT_FOCUSED_BORDER_COLOR = '#fff';\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1\n  },\n  contentContainerStyle: {\n    flex: 1\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  form: {\n    paddingHorizontal: Layout.LARGE_PADDING\n  },\n  inputContainer: {\n    marginBottom: 7\n  },\n  vSpacer: {\n    height: 15\n  },\n  buttonContainer: {\n    paddingVertical: 23\n  },\n  buttonsGroup: {\n    paddingTop: 23\n  },\n  separator: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  line: {\n    width: 64,\n    height: 1,\n    backgroundColor: INPUT_BORDER_COLOR\n  },\n  orText: {\n    top: -2,\n    paddingHorizontal: 8,\n    color: PLACEHOLDER_TEXT_COLOR\n  },\n  footer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    width: '100%'\n  },\n  termsContainer: {\n    flexDirection: 'row'\n  },\n  footerText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.white\n  },\n  footerLink: {\n    fontWeight: '400',\n    textDecorationLine: 'underline'\n  }\n});\n\nvar SignUpB = function (_Component) {\n  _inherits(SignUpB, _Component);\n\n  function SignUpB(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpB);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpB).call(this, props));\n\n    _this.emailChange = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.emailFocus = function () {\n      _this.setState({\n        emailFocused: true,\n        phoneFocused: false,\n        passwordFocused: false\n      });\n    };\n\n    _this.phoneChange = function (text) {\n      _this.setState({\n        phone: text\n      });\n    };\n\n    _this.phoneFocus = function () {\n      _this.setState({\n        phoneFocused: true,\n        emailFocused: false,\n        passwordFocused: false\n      });\n    };\n\n    _this.passwordChange = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.passwordFocus = function () {\n      _this.setState({\n        passwordFocused: true,\n        emailFocused: false,\n        phoneFocused: false\n      });\n    };\n\n    _this.onTogglePress = function () {\n      var secureTextEntry = _this.state.secureTextEntry;\n\n      _this.setState({\n        secureTextEntry: !secureTextEntry\n      });\n    };\n\n    _this.navigateTo = function (screen) {\n      return function () {\n        var navigation = _this.props.navigation;\n        navigation.navigate(screen);\n      };\n    };\n\n    _this.createAccount = function () {\n      _this.setState({\n        emailFocused: false,\n        phoneFocused: false,\n        passwordFocused: false\n      }, _this.navigateTo('Verification'));\n    };\n\n    _this.focusOn = function (nextFiled) {\n      return function () {\n        if (nextFiled) {\n          nextFiled.focus();\n        }\n      };\n    };\n\n    _this.state = {\n      email: '',\n      emailFocused: false,\n      phone: '',\n      phoneFocused: false,\n      password: '',\n      passwordFocused: false,\n      secureTextEntry: true\n    };\n    return _this;\n  }\n\n  _createClass(SignUpB, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          emailFocused = _this$state.emailFocused,\n          phoneFocused = _this$state.phoneFocused,\n          password = _this$state.password,\n          passwordFocused = _this$state.passwordFocused,\n          secureTextEntry = _this$state.secureTextEntry;\n      return React.createElement(GradientContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Colors.primaryColor,\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.screenContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        contentContainerStyle: styles.contentContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        }\n      }, React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.email = r;\n        },\n        onChangeText: this.emailChange,\n        onFocus: this.emailFocus,\n        inputFocused: emailFocused,\n        onSubmitEditing: this.focusOn(this.phone),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        keyboardType: \"email-address\",\n        placeholder: \"E-mail\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        inputContainerStyle: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      }), React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.phone = r;\n        },\n        onChangeText: this.phoneChange,\n        onFocus: this.phoneFocus,\n        inputFocused: phoneFocused,\n        onSubmitEditing: this.focusOn(this.password),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        keyboardType: \"phone-pad\",\n        placeholder: \"Phone number\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        inputContainerStyle: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }), React.createElement(UnderlinePasswordInput, {\n        onRef: function onRef(r) {\n          _this2.password = r;\n        },\n        onChangeText: this.passwordChange,\n        onFocus: this.passwordFocus,\n        inputFocused: passwordFocused,\n        onSubmitEditing: this.createAccount,\n        returnKeyType: \"done\",\n        placeholder: \"Password\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        secureTextEntry: secureTextEntry,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        toggleVisible: password.length > 0,\n        toggleText: secureTextEntry ? 'Show' : 'Hide',\n        onTogglePress: this.onTogglePress,\n        inputContainerStyle: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        }\n      }), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        }\n      }, React.createElement(ContainedButton, {\n        onPress: this.createAccount,\n        color: Colors.accentColor,\n        title: 'Create Account'.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      })), React.createElement(View, {\n        style: styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        }\n      }, React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      }), React.createElement(Text, {\n        style: styles.orText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      }, \"or\"), React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        }\n      })), React.createElement(View, {\n        style: styles.buttonsGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        }\n      }, React.createElement(ContainedButton, {\n        onPress: this.createAccount,\n        color: Colors.surface,\n        socialIconName: \"facebook-square\",\n        iconColor: \"#3b5998\",\n        title: 'Sign up with Facebook'.toUpperCase(),\n        titleColor: \"#3b5998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        }\n      }), React.createElement(View, {\n        style: styles.vSpacer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        }\n      }), React.createElement(ContainedButton, {\n        onPress: this.createAccount,\n        color: Colors.surface,\n        socialIconName: \"google\",\n        iconColor: \"#db4437\",\n        title: 'Sign up with Google'.toUpperCase(),\n        titleColor: \"#db4437\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.navigateTo('TermsConditions'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        }\n      }, React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        }\n      }, \"By registering, you accepts our\"), React.createElement(View, {\n        style: styles.termsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        }\n      }, React.createElement(Text, {\n        style: [styles.footerText, styles.footerLink],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        }\n      }, \"Terms & Conditions\"), React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        }\n      }, \" and \"), React.createElement(Text, {\n        style: [styles.footerText, styles.footerLink],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        }\n      }, \"Privacy Policy\"), React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        }\n      }, \".\"))))))));\n    }\n  }]);\n\n  return SignUpB;\n}(Component);\n\nexport { SignUpB as default };","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/signup/SignUpB.js"],"names":["React","Component","KeyboardAwareScrollView","ContainedButton","GradientContainer","UnderlinePasswordInput","UnderlineTextInput","Colors","Layout","PLACEHOLDER_TEXT_COLOR","INPUT_TEXT_COLOR","INPUT_BORDER_COLOR","INPUT_FOCUSED_BORDER_COLOR","styles","StyleSheet","create","screenContainer","flex","contentContainerStyle","content","justifyContent","form","paddingHorizontal","LARGE_PADDING","inputContainer","marginBottom","vSpacer","height","buttonContainer","paddingVertical","buttonsGroup","paddingTop","separator","flexDirection","alignItems","line","width","backgroundColor","orText","top","color","footer","padding","termsContainer","footerText","fontWeight","fontSize","white","footerLink","textDecorationLine","SignUpB","props","emailChange","text","setState","email","emailFocus","emailFocused","phoneFocused","passwordFocused","phoneChange","phone","phoneFocus","passwordChange","password","passwordFocus","onTogglePress","secureTextEntry","state","navigateTo","screen","navigation","navigate","createAccount","focusOn","nextFiled","focus","primaryColor","r","length","accentColor","toUpperCase","surface"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';\n\n// import components\nimport ContainedButton from '../../components/buttons/ContainedButton';\nimport GradientContainer from '../../components/gradientcontainer/GradientContainer';\nimport UnderlinePasswordInput from '../../components/textinputs/UnderlinePasswordInput';\nimport UnderlineTextInput from '../../components/textinputs/UnderlineTextInput';\n\n// import colors, layout\nimport Colors from '../../theme/colors';\nimport Layout from '../../theme/layout';\n\n// SignUpB Config\nconst PLACEHOLDER_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\nconst INPUT_TEXT_COLOR = '#fff';\nconst INPUT_BORDER_COLOR = 'rgba(255, 255, 255, 0.4)';\nconst INPUT_FOCUSED_BORDER_COLOR = '#fff';\n\n// SignUpB Styles\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n  },\n  contentContainerStyle: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n  form: {\n    paddingHorizontal: Layout.LARGE_PADDING,\n  },\n  inputContainer: {marginBottom: 7},\n  vSpacer: {\n    height: 15,\n  },\n  buttonContainer: {\n    paddingVertical: 23,\n  },\n  buttonsGroup: {\n    paddingTop: 23,\n  },\n  separator: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  line: {\n    width: 64,\n    height: 1,\n    backgroundColor: INPUT_BORDER_COLOR,\n  },\n  orText: {\n    top: -2,\n    paddingHorizontal: 8,\n    color: PLACEHOLDER_TEXT_COLOR,\n  },\n  footer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    width: '100%',\n  },\n  termsContainer: {\n    flexDirection: 'row',\n  },\n  footerText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.white,\n  },\n  footerLink: {\n    fontWeight: '400',\n    textDecorationLine: 'underline',\n  },\n});\n\n// SignUpB\nexport default class SignUpB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      emailFocused: false,\n      phone: '',\n      phoneFocused: false,\n      password: '',\n      passwordFocused: false,\n      secureTextEntry: true,\n    };\n  }\n\n  emailChange = text => {\n    this.setState({\n      email: text,\n    });\n  };\n\n  emailFocus = () => {\n    this.setState({\n      emailFocused: true,\n      phoneFocused: false,\n      passwordFocused: false,\n    });\n  };\n\n  phoneChange = text => {\n    this.setState({\n      phone: text,\n    });\n  };\n\n  phoneFocus = () => {\n    this.setState({\n      phoneFocused: true,\n      emailFocused: false,\n      passwordFocused: false,\n    });\n  };\n\n  passwordChange = text => {\n    this.setState({\n      password: text,\n    });\n  };\n\n  passwordFocus = () => {\n    this.setState({\n      passwordFocused: true,\n      emailFocused: false,\n      phoneFocused: false,\n    });\n  };\n\n  onTogglePress = () => {\n    const {secureTextEntry} = this.state;\n    this.setState({\n      secureTextEntry: !secureTextEntry,\n    });\n  };\n\n  navigateTo = screen => () => {\n    const {navigation} = this.props;\n    navigation.navigate(screen);\n  };\n\n  createAccount = () => {\n    // const { email, phone, password } = this.state;\n    this.setState(\n      {\n        emailFocused: false,\n        phoneFocused: false,\n        passwordFocused: false,\n      },\n      this.navigateTo('Verification'),\n    );\n  };\n\n  focusOn = nextFiled => () => {\n    if (nextFiled) {\n      nextFiled.focus();\n    }\n  };\n\n  render() {\n    const {\n      emailFocused,\n      phoneFocused,\n      password,\n      passwordFocused,\n      secureTextEntry,\n    } = this.state;\n\n    return (\n      <GradientContainer>\n        <StatusBar\n          backgroundColor={Colors.primaryColor}\n          barStyle=\"light-content\"\n        />\n\n        <SafeAreaView style={styles.screenContainer}>\n          <KeyboardAwareScrollView\n            contentContainerStyle={styles.contentContainerStyle}>\n            <View style={styles.content}>\n              <View />\n\n              <View style={styles.form}>\n                <UnderlineTextInput\n                  onRef={r => {\n                    this.email = r;\n                  }}\n                  onChangeText={this.emailChange}\n                  onFocus={this.emailFocus}\n                  inputFocused={emailFocused}\n                  onSubmitEditing={this.focusOn(this.phone)}\n                  returnKeyType=\"next\"\n                  blurOnSubmit={false}\n                  keyboardType=\"email-address\"\n                  placeholder=\"E-mail\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                  inputContainerStyle={styles.inputContainer}\n                />\n\n                <UnderlineTextInput\n                  onRef={r => {\n                    this.phone = r;\n                  }}\n                  onChangeText={this.phoneChange}\n                  onFocus={this.phoneFocus}\n                  inputFocused={phoneFocused}\n                  onSubmitEditing={this.focusOn(this.password)}\n                  returnKeyType=\"next\"\n                  blurOnSubmit={false}\n                  keyboardType=\"phone-pad\"\n                  placeholder=\"Phone number\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                  inputContainerStyle={styles.inputContainer}\n                />\n\n                <UnderlinePasswordInput\n                  onRef={r => {\n                    this.password = r;\n                  }}\n                  onChangeText={this.passwordChange}\n                  onFocus={this.passwordFocus}\n                  inputFocused={passwordFocused}\n                  onSubmitEditing={this.createAccount}\n                  returnKeyType=\"done\"\n                  placeholder=\"Password\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  secureTextEntry={secureTextEntry}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                  toggleVisible={password.length > 0}\n                  toggleText={secureTextEntry ? 'Show' : 'Hide'}\n                  onTogglePress={this.onTogglePress}\n                  inputContainerStyle={styles.inputContainer}\n                />\n\n                <View style={styles.buttonContainer}>\n                  <ContainedButton\n                    onPress={this.createAccount}\n                    color={Colors.accentColor}\n                    title={'Create Account'.toUpperCase()}\n                  />\n                </View>\n\n                <View style={styles.separator}>\n                  <View style={styles.line} />\n                  <Text style={styles.orText}>or</Text>\n                  <View style={styles.line} />\n                </View>\n\n                <View style={styles.buttonsGroup}>\n                  <ContainedButton\n                    onPress={this.createAccount}\n                    color={Colors.surface}\n                    socialIconName=\"facebook-square\"\n                    iconColor=\"#3b5998\"\n                    title={'Sign up with Facebook'.toUpperCase()}\n                    titleColor=\"#3b5998\"\n                  />\n                  <View style={styles.vSpacer} />\n                  <ContainedButton\n                    onPress={this.createAccount}\n                    color={Colors.surface}\n                    socialIconName=\"google\"\n                    iconColor=\"#db4437\"\n                    title={'Sign up with Google'.toUpperCase()}\n                    titleColor=\"#db4437\"\n                  />\n                </View>\n              </View>\n\n              <TouchableWithoutFeedback\n                onPress={this.navigateTo('TermsConditions')}>\n                <View style={styles.footer}>\n                  <Text style={styles.footerText}>\n                    By registering, you accepts our\n                  </Text>\n                  <View style={styles.termsContainer}>\n                    <Text style={[styles.footerText, styles.footerLink]}>\n                      Terms & Conditions\n                    </Text>\n                    <Text style={styles.footerText}> and </Text>\n                    <Text style={[styles.footerText, styles.footerLink]}>\n                      Privacy Policy\n                    </Text>\n                    <Text style={styles.footerText}>.</Text>\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </View>\n          </KeyboardAwareScrollView>\n        </SafeAreaView>\n      </GradientContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}