{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/buttons/Button.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewStyle } from \"react-native-web/dist/index\";\nimport { FontAwesome as FAIcon } from \"@expo/vector-icons\";\nimport { ButtonText } from \"../text/CustomText\";\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\nvar BUTTON_BORDER_RADIUS = 4;\nvar BUTTON_HEIGHT = 48;\nvar BUTTON_WIDTH = \"100%\";\nvar BUTTON_HEIGHT_SM = 40;\nvar BUTTON_WIDTH_SM = Layout.SCREEN_WIDTH / 2.2;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primaryColor,\n    borderRadius: BUTTON_BORDER_RADIUS\n  },\n  defaultContainer: {\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT\n  },\n  smallContainer: {\n    maxWidth: BUTTON_WIDTH_SM,\n    height: BUTTON_HEIGHT_SM,\n    paddingHorizontal: 16\n  },\n  disabled: {\n    opacity: 0.72\n  },\n  socialIconContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    width: 52\n  },\n  outlined: {\n    borderWidth: 2,\n    borderColor: Colors.primaryColor,\n    backgroundColor: \"transparent\"\n  },\n  rounded: {\n    borderRadius: BUTTON_HEIGHT / 2\n  },\n  title: {\n    color: Colors.onPrimaryColor\n  },\n  outlinedTitle: {\n    color: Colors.primaryColor\n  }\n});\n\nvar Button = function Button(_ref) {\n  var onPress = _ref.onPress,\n      disabled = _ref.disabled,\n      _ref$activeOpacity = _ref.activeOpacity,\n      activeOpacity = _ref$activeOpacity === void 0 ? 0.85 : _ref$activeOpacity,\n      height = _ref.height,\n      buttonStyle = _ref.buttonStyle,\n      borderRadius = _ref.borderRadius,\n      borderColor = _ref.borderColor,\n      color = _ref.color,\n      iconColor = _ref.iconColor,\n      socialIconName = _ref.socialIconName,\n      small = _ref.small,\n      title = _ref.title,\n      titleColor = _ref.titleColor,\n      rounded = _ref.rounded,\n      outlined = _ref.outlined;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    disabled: disabled,\n    activeOpacity: activeOpacity,\n    style: [styles.container, borderRadius && {\n      borderRadius: borderRadius\n    }, color && {\n      backgroundColor: color\n    }, styles.defaultContainer, height && {\n      height: height\n    }, small && styles.smallContainer, rounded && styles.rounded, outlined && styles.outlined, height && rounded && {\n      borderRadius: height / 2\n    }, borderColor && {\n      borderColor: borderColor\n    }, disabled && styles.disabled, buttonStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    }\n  }, socialIconName && React.createElement(View, {\n    style: styles.socialIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    }\n  }, React.createElement(FAIcon, {\n    name: socialIconName,\n    size: 20,\n    color: iconColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    }\n  })), React.createElement(ButtonText, {\n    style: [styles.title, outlined && styles.outlinedTitle, titleColor && {\n      color: titleColor\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    }\n  }, title || \"Button\"));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/buttons/Button.js"],"names":["React","ViewStyle","FontAwesome","FAIcon","ButtonText","Colors","Layout","BUTTON_BORDER_RADIUS","BUTTON_HEIGHT","BUTTON_WIDTH","BUTTON_HEIGHT_SM","BUTTON_WIDTH_SM","SCREEN_WIDTH","styles","StyleSheet","create","container","justifyContent","alignItems","backgroundColor","primaryColor","borderRadius","defaultContainer","width","height","smallContainer","maxWidth","paddingHorizontal","disabled","opacity","socialIconContainer","position","top","left","outlined","borderWidth","borderColor","rounded","title","color","onPrimaryColor","outlinedTitle","Button","onPress","activeOpacity","buttonStyle","iconColor","socialIconName","small","titleColor"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from \"react\";\nimport { StyleSheet, TouchableOpacity, View, ViewStyle } from \"react-native\";\nimport { FontAwesome as FAIcon } from \"@expo/vector-icons\";\n\n// import components\nimport { ButtonText } from \"../text/CustomText\";\n\n// import colors, layout\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\n\n// Button Config\nconst BUTTON_BORDER_RADIUS = 4;\nconst BUTTON_HEIGHT = 48;\nconst BUTTON_WIDTH = \"100%\";\nconst BUTTON_HEIGHT_SM = 40;\nconst BUTTON_WIDTH_SM = Layout.SCREEN_WIDTH / 2.2;\n\n// Button Styles\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primaryColor,\n    borderRadius: BUTTON_BORDER_RADIUS\n  },\n  defaultContainer: {\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT\n  },\n  smallContainer: {\n    maxWidth: BUTTON_WIDTH_SM,\n    height: BUTTON_HEIGHT_SM,\n    paddingHorizontal: 16\n  },\n  disabled: {\n    opacity: 0.72\n  },\n  socialIconContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    width: 52\n  },\n  outlined: {\n    borderWidth: 2,\n    borderColor: Colors.primaryColor,\n    backgroundColor: \"transparent\"\n  },\n  rounded: {\n    borderRadius: BUTTON_HEIGHT / 2\n  },\n  title: {\n    color: Colors.onPrimaryColor\n  },\n  outlinedTitle: {\n    color: Colors.primaryColor\n  }\n});\n\n// Button Props\ntype Props = {\n  /**\n   * Handler to be called when the user taps the button\n   */\n  onPress: () => void,\n\n  /**\n   * If true, disable all interactions for this component.\n   */\n  disabled: boolean,\n\n  /**\n   * Determines what the opacity of the wrapped view should be when touch is active.\n   * The value should be between 0 and 1\n   */\n  activeOpacity: number,\n  height: number,\n  buttonStyle: ViewStyle,\n  borderRadius: number,\n  borderColor: string,\n\n  /**\n   * Button background color\n   */\n  color: string,\n  iconColor: string,\n  socialIconName: string, // Social FontAwesome Icon Name\n  small: boolean,\n\n  /**\n   * Text to display inside the button\n   */\n  title: string,\n\n  /**\n   * Button title color\n   */\n  titleColor: string,\n  rounded: boolean,\n  outlined: boolean\n};\n\n// Button\nconst Button = ({\n  onPress,\n  disabled,\n  activeOpacity = 0.85,\n  height,\n  buttonStyle,\n  borderRadius,\n  borderColor,\n  color,\n  iconColor,\n  socialIconName,\n  small,\n  title,\n  titleColor,\n  rounded,\n  outlined\n}: Props) => (\n  <TouchableOpacity\n    onPress={onPress}\n    disabled={disabled}\n    activeOpacity={activeOpacity}\n    style={[\n      styles.container,\n      borderRadius && { borderRadius },\n      color && { backgroundColor: color },\n      styles.defaultContainer,\n      height && { height },\n      small && styles.smallContainer,\n      rounded && styles.rounded,\n      outlined && styles.outlined,\n      height && rounded && { borderRadius: height / 2 },\n      borderColor && { borderColor },\n      disabled && styles.disabled,\n      buttonStyle\n    ]}\n  >\n    {socialIconName && (\n      <View style={styles.socialIconContainer}>\n        <FAIcon name={socialIconName} size={20} color={iconColor} />\n      </View>\n    )}\n    <ButtonText\n      style={[\n        styles.title,\n        outlined && styles.outlinedTitle,\n        titleColor && { color: titleColor }\n      ]}\n    >\n      {title || \"Button\"}\n    </ButtonText>\n  </TouchableOpacity>\n);\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}