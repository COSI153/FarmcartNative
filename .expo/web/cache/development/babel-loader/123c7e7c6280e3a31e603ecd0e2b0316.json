{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/signin/SignInA.js\";\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport Button from \"../../components/buttons/Button\";\nimport InputModal from \"../../components/modals/InputModal\";\nimport UnderlinePasswordInput from \"../../components/textinputs/UnderlinePasswordInput\";\nimport UnderlineTextInput from \"../../components/textinputs/UnderlineTextInput\";\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\nvar PLACEHOLDER_TEXT_COLOR = 'rgba(0, 0, 0, 0.4)';\nvar INPUT_TEXT_COLOR = 'rgba(0, 0, 0, 0.87)';\nvar INPUT_BORDER_COLOR = 'rgba(0, 0, 0, 0.2)';\nvar INPUT_FOCUSED_BORDER_COLOR = '#000';\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    backgroundColor: Colors.background\n  },\n  contentContainerStyle: {\n    flex: 1\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  form: {\n    paddingHorizontal: Layout.LARGE_PADDING\n  },\n  inputContainer: {\n    marginBottom: 7\n  },\n  buttonContainer: {\n    paddingTop: 23\n  },\n  forgotPassword: {\n    paddingVertical: 23\n  },\n  forgotPasswordText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.secondaryText,\n    textAlign: 'center'\n  },\n  separator: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  line: {\n    width: 64,\n    height: 1,\n    backgroundColor: INPUT_BORDER_COLOR\n  },\n  orText: {\n    top: -2,\n    paddingHorizontal: 8,\n    color: PLACEHOLDER_TEXT_COLOR\n  },\n  buttonsGroup: {\n    paddingTop: 23\n  },\n  vSpacer: {\n    height: 15\n  },\n  footer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    width: '100%'\n  },\n  termsContainer: {\n    flexDirection: 'row'\n  },\n  footerText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.primaryText\n  },\n  footerLink: {\n    fontWeight: '400',\n    textDecorationLine: 'underline'\n  }\n});\n\nvar SignInA = function (_Component) {\n  _inherits(SignInA, _Component);\n\n  function SignInA(props) {\n    var _this;\n\n    _classCallCheck(this, SignInA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInA).call(this, props));\n\n    _this.emailChange = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.emailFocus = function () {\n      _this.setState({\n        emailFocused: true,\n        passwordFocused: false\n      });\n    };\n\n    _this.passwordChange = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n\n    _this.passwordFocus = function () {\n      _this.setState({\n        passwordFocused: true,\n        emailFocused: false\n      });\n    };\n\n    _this.onTogglePress = function () {\n      var secureTextEntry = _this.state.secureTextEntry;\n\n      _this.setState({\n        secureTextEntry: !secureTextEntry\n      });\n    };\n\n    _this.focusOn = function (nextFiled) {\n      return function () {\n        if (nextFiled) {\n          nextFiled.focus();\n        }\n      };\n    };\n\n    _this.showInputModal = function (value) {\n      return function () {\n        _this.setState({\n          inputModalVisible: value\n        });\n      };\n    };\n\n    _this.navigateTo = function (screen) {\n      return function () {\n        var navigation = _this.props.navigation;\n        navigation.navigate(screen);\n      };\n    };\n\n    _this.signIn = function () {\n      _this.setState({\n        emailFocused: false,\n        passwordFocused: false\n      }, _this.navigateTo('HomeNavigator'));\n    };\n\n    _this.state = {\n      email: '',\n      emailFocused: false,\n      password: '',\n      passwordFocused: false,\n      secureTextEntry: true,\n      inputModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(SignInA, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          emailFocused = _this$state.emailFocused,\n          password = _this$state.password,\n          passwordFocused = _this$state.passwordFocused,\n          secureTextEntry = _this$state.secureTextEntry,\n          inputModalVisible = _this$state.inputModalVisible;\n      return React.createElement(SafeAreaView, {\n        style: styles.screenContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Colors.statusBarColor,\n        barStyle: \"dark-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        }\n      }), React.createElement(KeyboardAwareScrollView, {\n        contentContainerStyle: styles.contentContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        }\n      }, React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        }\n      }), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.email = r;\n        },\n        onChangeText: this.emailChange,\n        onFocus: this.emailFocus,\n        inputFocused: emailFocused,\n        onSubmitEditing: this.focusOn(this.password),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        keyboardType: \"email-address\",\n        placeholder: \"E-mail or phone number\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        inputContainerStyle: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }), React.createElement(UnderlinePasswordInput, {\n        onRef: function onRef(r) {\n          _this2.password = r;\n        },\n        onChangeText: this.passwordChange,\n        onFocus: this.passwordFocus,\n        inputFocused: passwordFocused,\n        onSubmitEditing: this.signIn,\n        returnKeyType: \"done\",\n        placeholder: \"Password\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        secureTextEntry: secureTextEntry,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        toggleVisible: password.length > 0,\n        toggleText: secureTextEntry ? 'Show' : 'Hide',\n        onTogglePress: this.onTogglePress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      }), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        }\n      }, React.createElement(Button, {\n        onPress: this.navigateTo('HomeNavigator'),\n        title: 'Sign in'.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      })), React.createElement(View, {\n        style: styles.forgotPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        }\n      }, React.createElement(Text, {\n        onPress: this.navigateTo('ForgotPassword'),\n        style: styles.forgotPasswordText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }, \"Forgot password?\")), React.createElement(View, {\n        style: styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        }\n      }, React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        }\n      }), React.createElement(Text, {\n        style: styles.orText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        }\n      }, \"or\"), React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        }\n      })), React.createElement(View, {\n        style: styles.buttonsGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        }\n      }, React.createElement(Button, {\n        onPress: this.navigateTo('HomeNavigator'),\n        color: \"#3b5998\",\n        socialIconName: \"facebook-square\",\n        iconColor: Colors.white,\n        title: 'Sign in with Facebook'.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }), React.createElement(View, {\n        style: styles.vSpacer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        }\n      }), React.createElement(Button, {\n        onPress: this.navigateTo('HomeNavigator'),\n        color: \"#db4437\",\n        socialIconName: \"google\",\n        iconColor: Colors.white,\n        title: 'Sign in with Google'.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.navigateTo('TermsConditions'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        }\n      }, React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        }\n      }, \"By signing in, you accepts our\"), React.createElement(View, {\n        style: styles.termsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        }\n      }, React.createElement(Text, {\n        style: [styles.footerText, styles.footerLink],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        }\n      }, \"Terms & Conditions\"), React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        }\n      }, \" and \"), React.createElement(Text, {\n        style: [styles.footerText, styles.footerLink],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        }\n      }, \"Privacy Policy\"), React.createElement(Text, {\n        style: styles.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        }\n      }, \".\")))))), React.createElement(InputModal, {\n        title: \"Forgot password?\",\n        message: \"Enter your e-mail address to reset password\",\n        inputDefaultValue: email,\n        inputPlaceholder: \"E-mail address\",\n        inputKeyboardType: \"email-address\",\n        onRequestClose: this.showInputModal(false),\n        buttonTitle: 'Reset password'.toUpperCase(),\n        onClosePress: this.showInputModal(false),\n        visible: inputModalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        }\n      }));\n    }\n  }]);\n\n  return SignInA;\n}(Component);\n\nexport { SignInA as default };","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/signin/SignInA.js"],"names":["React","Component","KeyboardAwareScrollView","Button","InputModal","UnderlinePasswordInput","UnderlineTextInput","Colors","Layout","PLACEHOLDER_TEXT_COLOR","INPUT_TEXT_COLOR","INPUT_BORDER_COLOR","INPUT_FOCUSED_BORDER_COLOR","styles","StyleSheet","create","screenContainer","flex","backgroundColor","background","contentContainerStyle","content","justifyContent","form","paddingHorizontal","LARGE_PADDING","inputContainer","marginBottom","buttonContainer","paddingTop","forgotPassword","paddingVertical","forgotPasswordText","fontWeight","fontSize","color","secondaryText","textAlign","separator","flexDirection","alignItems","line","width","height","orText","top","buttonsGroup","vSpacer","footer","padding","termsContainer","footerText","primaryText","footerLink","textDecorationLine","SignInA","props","emailChange","text","setState","email","emailFocus","emailFocused","passwordFocused","passwordChange","password","passwordFocus","onTogglePress","secureTextEntry","state","focusOn","nextFiled","focus","showInputModal","value","inputModalVisible","navigateTo","screen","navigation","navigate","signIn","statusBarColor","r","length","toUpperCase","white"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';\n\n// import components\nimport Button from '../../components/buttons/Button';\nimport InputModal from '../../components/modals/InputModal';\nimport UnderlinePasswordInput from '../../components/textinputs/UnderlinePasswordInput';\nimport UnderlineTextInput from '../../components/textinputs/UnderlineTextInput';\n\n// import colors, layout\nimport Colors from '../../theme/colors';\nimport Layout from '../../theme/layout';\n\n// SignInA Config\nconst PLACEHOLDER_TEXT_COLOR = 'rgba(0, 0, 0, 0.4)';\nconst INPUT_TEXT_COLOR = 'rgba(0, 0, 0, 0.87)';\nconst INPUT_BORDER_COLOR = 'rgba(0, 0, 0, 0.2)';\nconst INPUT_FOCUSED_BORDER_COLOR = '#000';\n\n// SignInA Styles\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    backgroundColor: Colors.background,\n  },\n  contentContainerStyle: {flex: 1},\n  content: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n  form: {\n    paddingHorizontal: Layout.LARGE_PADDING,\n  },\n  inputContainer: {marginBottom: 7},\n  buttonContainer: {paddingTop: 23},\n  forgotPassword: {paddingVertical: 23},\n  forgotPasswordText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.secondaryText,\n    textAlign: 'center',\n  },\n  separator: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  line: {\n    width: 64,\n    height: 1,\n    backgroundColor: INPUT_BORDER_COLOR,\n  },\n  orText: {\n    top: -2,\n    paddingHorizontal: 8,\n    color: PLACEHOLDER_TEXT_COLOR,\n  },\n  buttonsGroup: {\n    paddingTop: 23,\n  },\n  vSpacer: {\n    height: 15,\n  },\n  footer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    width: '100%',\n  },\n  termsContainer: {\n    flexDirection: 'row',\n  },\n  footerText: {\n    fontWeight: '300',\n    fontSize: 13,\n    color: Colors.primaryText,\n  },\n  footerLink: {\n    fontWeight: '400',\n    textDecorationLine: 'underline',\n  },\n});\n\n// SignInA\nexport default class SignInA extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      emailFocused: false,\n      password: '',\n      passwordFocused: false,\n      secureTextEntry: true,\n      inputModalVisible: false,\n    };\n  }\n\n  emailChange = text => {\n    this.setState({\n      email: text,\n    });\n  };\n\n  emailFocus = () => {\n    this.setState({\n      emailFocused: true,\n      passwordFocused: false,\n    });\n  };\n\n  passwordChange = text => {\n    this.setState({\n      password: text,\n    });\n  };\n\n  passwordFocus = () => {\n    this.setState({\n      passwordFocused: true,\n      emailFocused: false,\n    });\n  };\n\n  onTogglePress = () => {\n    const {secureTextEntry} = this.state;\n    this.setState({\n      secureTextEntry: !secureTextEntry,\n    });\n  };\n\n  focusOn = nextFiled => () => {\n    if (nextFiled) {\n      nextFiled.focus();\n    }\n  };\n\n  showInputModal = value => () => {\n    this.setState({\n      inputModalVisible: value,\n    });\n  };\n\n  navigateTo = screen => () => {\n    const {navigation} = this.props;\n    navigation.navigate(screen);\n  };\n\n  signIn = () => {\n    this.setState(\n      {\n        emailFocused: false,\n        passwordFocused: false,\n      },\n      this.navigateTo('HomeNavigator'),\n    );\n  };\n\n  render() {\n    const {\n      email,\n      emailFocused,\n      password,\n      passwordFocused,\n      secureTextEntry,\n      inputModalVisible,\n    } = this.state;\n\n    return (\n      <SafeAreaView style={styles.screenContainer}>\n        <StatusBar\n          backgroundColor={Colors.statusBarColor}\n          barStyle=\"dark-content\"\n        />\n\n        <KeyboardAwareScrollView\n          contentContainerStyle={styles.contentContainerStyle}>\n          <View style={styles.content}>\n            <View />\n\n            <View style={styles.form}>\n              <UnderlineTextInput\n                onRef={r => {\n                  this.email = r;\n                }}\n                onChangeText={this.emailChange}\n                onFocus={this.emailFocus}\n                inputFocused={emailFocused}\n                onSubmitEditing={this.focusOn(this.password)}\n                returnKeyType=\"next\"\n                blurOnSubmit={false}\n                keyboardType=\"email-address\"\n                placeholder=\"E-mail or phone number\"\n                placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                inputTextColor={INPUT_TEXT_COLOR}\n                borderColor={INPUT_BORDER_COLOR}\n                focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                inputContainerStyle={styles.inputContainer}\n              />\n\n              <UnderlinePasswordInput\n                onRef={r => {\n                  this.password = r;\n                }}\n                onChangeText={this.passwordChange}\n                onFocus={this.passwordFocus}\n                inputFocused={passwordFocused}\n                onSubmitEditing={this.signIn}\n                returnKeyType=\"done\"\n                placeholder=\"Password\"\n                placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                inputTextColor={INPUT_TEXT_COLOR}\n                secureTextEntry={secureTextEntry}\n                borderColor={INPUT_BORDER_COLOR}\n                focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                toggleVisible={password.length > 0}\n                toggleText={secureTextEntry ? 'Show' : 'Hide'}\n                onTogglePress={this.onTogglePress}\n              />\n\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={this.navigateTo('HomeNavigator')}\n                  title={'Sign in'.toUpperCase()}\n                />\n              </View>\n\n              <View style={styles.forgotPassword}>\n                <Text\n                  // onPress={this.showInputModal(true)}\n                  onPress={this.navigateTo('ForgotPassword')}\n                  style={styles.forgotPasswordText}>\n                  Forgot password?\n                </Text>\n              </View>\n\n              <View style={styles.separator}>\n                <View style={styles.line} />\n                <Text style={styles.orText}>or</Text>\n                <View style={styles.line} />\n              </View>\n\n              <View style={styles.buttonsGroup}>\n                <Button\n                  onPress={this.navigateTo('HomeNavigator')}\n                  color=\"#3b5998\"\n                  socialIconName=\"facebook-square\"\n                  iconColor={Colors.white}\n                  title={'Sign in with Facebook'.toUpperCase()}\n                />\n                <View style={styles.vSpacer} />\n                <Button\n                  onPress={this.navigateTo('HomeNavigator')}\n                  color=\"#db4437\"\n                  socialIconName=\"google\"\n                  iconColor={Colors.white}\n                  title={'Sign in with Google'.toUpperCase()}\n                />\n              </View>\n            </View>\n\n            <TouchableWithoutFeedback\n              onPress={this.navigateTo('TermsConditions')}>\n              <View style={styles.footer}>\n                <Text style={styles.footerText}>\n                  By signing in, you accepts our\n                </Text>\n                <View style={styles.termsContainer}>\n                  <Text style={[styles.footerText, styles.footerLink]}>\n                    Terms & Conditions\n                  </Text>\n                  <Text style={styles.footerText}> and </Text>\n                  <Text style={[styles.footerText, styles.footerLink]}>\n                    Privacy Policy\n                  </Text>\n                  <Text style={styles.footerText}>.</Text>\n                </View>\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n        </KeyboardAwareScrollView>\n\n        <InputModal\n          title=\"Forgot password?\"\n          message=\"Enter your e-mail address to reset password\"\n          inputDefaultValue={email}\n          inputPlaceholder=\"E-mail address\"\n          inputKeyboardType=\"email-address\"\n          onRequestClose={this.showInputModal(false)}\n          buttonTitle={'Reset password'.toUpperCase()}\n          onClosePress={this.showInputModal(false)}\n          visible={inputModalVisible}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}