{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/textinputs/UnderlinePasswordInput.js\";\nimport React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Colors from \"../../theme/colors\";\nvar isRTL = I18nManager.isRTL;\nvar INPUT_HEIGHT = 44;\nvar INPUT_WIDTH = '100%';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n    borderBottomWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.2)',\n    width: INPUT_WIDTH\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 0,\n    height: INPUT_HEIGHT,\n    fontSize: 16,\n    color: Colors.primaryText,\n    textAlign: isRTL ? 'right' : 'left'\n  },\n  toggleContainer: {\n    paddingLeft: 10\n  },\n  toggleText: {\n    padding: 3,\n    fontSize: 14,\n    fontWeight: '500',\n    color: Colors.primaryText\n  }\n});\n\nvar UnderlinePasswordInput = function UnderlinePasswordInput(_ref) {\n  var _ref$onRef = _ref.onRef,\n      onRef = _ref$onRef === void 0 ? function () {} : _ref$onRef,\n      onChangeText = _ref.onChangeText,\n      onFocus = _ref.onFocus,\n      inputFocused = _ref.inputFocused,\n      onSubmitEditing = _ref.onSubmitEditing,\n      returnKeyType = _ref.returnKeyType,\n      placeholder = _ref.placeholder,\n      placeholderTextColor = _ref.placeholderTextColor,\n      inputTextColor = _ref.inputTextColor,\n      _ref$secureTextEntry = _ref.secureTextEntry,\n      secureTextEntry = _ref$secureTextEntry === void 0 ? true : _ref$secureTextEntry,\n      borderColor = _ref.borderColor,\n      focusedBorderColor = _ref.focusedBorderColor,\n      toggleVisible = _ref.toggleVisible,\n      toggleText = _ref.toggleText,\n      onTogglePress = _ref.onTogglePress;\n  return React.createElement(View, {\n    style: [styles.container, borderColor && {\n      borderColor: borderColor\n    }, inputFocused && {\n      borderColor: focusedBorderColor\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    }\n  }, React.createElement(TextInput, {\n    ref: function ref(r) {\n      return onRef(r);\n    },\n    onChangeText: onChangeText,\n    onFocus: onFocus,\n    onSubmitEditing: onSubmitEditing,\n    returnKeyType: returnKeyType,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    secureTextEntry: secureTextEntry,\n    autoCapitalize: \"none\",\n    style: [styles.textInput, inputTextColor && {\n      color: inputTextColor\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    }\n  }), React.createElement(View, {\n    style: styles.toggleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    }\n  }, toggleVisible && React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: onTogglePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    }\n  }, React.createElement(Text, {\n    style: [styles.toggleText, inputTextColor && {\n      color: inputTextColor\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    }\n  }, toggleText))));\n};\n\nexport default UnderlinePasswordInput;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/textinputs/UnderlinePasswordInput.js"],"names":["React","Colors","isRTL","I18nManager","INPUT_HEIGHT","INPUT_WIDTH","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","marginTop","paddingVertical","paddingHorizontal","borderBottomWidth","borderColor","width","textInput","flex","height","fontSize","color","primaryText","textAlign","toggleContainer","paddingLeft","toggleText","padding","fontWeight","UnderlinePasswordInput","onRef","onChangeText","onFocus","inputFocused","onSubmitEditing","returnKeyType","placeholder","placeholderTextColor","inputTextColor","secureTextEntry","focusedBorderColor","toggleVisible","onTogglePress","r"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {\n  I18nManager,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// UnderlinePasswordInput Config\nconst isRTL = I18nManager.isRTL;\nconst INPUT_HEIGHT = 44;\nconst INPUT_WIDTH = '100%';\n\n// UnderlinePasswordInput Styles\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 8,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n    borderBottomWidth: 1,\n    borderColor: 'rgba(0, 0, 0, 0.2)',\n    width: INPUT_WIDTH,\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 0,\n    height: INPUT_HEIGHT,\n    fontSize: 16,\n    color: Colors.primaryText,\n    textAlign: isRTL ? 'right' : 'left',\n  },\n  toggleContainer: {\n    paddingLeft: 10,\n  },\n  toggleText: {\n    padding: 3,\n    fontSize: 14,\n    fontWeight: '500',\n    color: Colors.primaryText,\n  },\n});\n\n// UnderlinePasswordInput Props\ntype Props = {\n  onRef: () => {},\n  onChangeText: () => {},\n  onFocus: () => {},\n  inputFocused: boolean,\n  onSubmitEditing: () => {},\n  returnKeyType: 'done' | 'go' | 'next' | 'search' | 'send',\n  placeholder: string,\n  placeholderTextColor: string,\n  inputTextColor: string,\n  secureTextEntry: boolean,\n  borderColor: string,\n  focusedBorderColor: string,\n  toggleVisible: boolean,\n  toggleText: string,\n  onTogglePress: () => {},\n};\n\n// UnderlinePasswordInput\nconst UnderlinePasswordInput = ({\n  onRef = () => {},\n  onChangeText,\n  onFocus,\n  inputFocused,\n  onSubmitEditing,\n  returnKeyType,\n  placeholder,\n  placeholderTextColor,\n  inputTextColor,\n  secureTextEntry = true,\n  borderColor,\n  focusedBorderColor,\n  toggleVisible,\n  toggleText,\n  onTogglePress,\n}: Props) => (\n  <View\n    style={[\n      styles.container,\n      borderColor && {borderColor},\n      inputFocused && {borderColor: focusedBorderColor},\n    ]}>\n    <TextInput\n      ref={(r) => onRef(r)}\n      onChangeText={onChangeText}\n      onFocus={onFocus}\n      onSubmitEditing={onSubmitEditing}\n      returnKeyType={returnKeyType}\n      placeholder={placeholder}\n      placeholderTextColor={placeholderTextColor}\n      secureTextEntry={secureTextEntry}\n      autoCapitalize=\"none\"\n      style={[styles.textInput, inputTextColor && {color: inputTextColor}]}\n    />\n    <View style={styles.toggleContainer}>\n      {toggleVisible && (\n        <TouchableOpacity activeOpacity={0.9} onPress={onTogglePress}>\n          <Text\n            style={[\n              styles.toggleText,\n              inputTextColor && {color: inputTextColor},\n            ]}>\n            {toggleText}\n          </Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n);\n\nexport default UnderlinePasswordInput;\n"]},"metadata":{},"sourceType":"module"}