{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/phoebe0_o/Desktop/FarmcartNative/src/components/TouchableItem.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\n\nvar TouchableItem = function TouchableItem(props) {\n  if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n    var _props$borderless = props.borderless,\n        borderless = _props$borderless === void 0 ? false : _props$borderless,\n        _props$rippleColor = props.rippleColor,\n        rippleColor = _props$rippleColor === void 0 ? 'rgba(0, 0, 0, 0.16)' : _props$rippleColor,\n        _children = props.children,\n        style = props.style,\n        rest = _objectWithoutProperties(props, [\"borderless\", \"rippleColor\", \"children\", \"style\"]);\n\n    return React.createElement(TouchableNativeFeedback, _extends({}, rest, {\n      style: null,\n      background: TouchableNativeFeedback.Ripple(rippleColor, borderless),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      }\n    }), React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      }\n    }, React.Children.only(_children)));\n  }\n\n  var children = props.children;\n  return React.createElement(TouchableOpacity, _extends({\n    activeOpacity: 0.85\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }), children);\n};\n\nexport default TouchableItem;","map":{"version":3,"sources":["/Users/phoebe0_o/Desktop/FarmcartNative/src/components/TouchableItem.js"],"names":["React","ANDROID_VERSION_LOLLIPOP","TouchableItem","props","Platform","OS","Version","borderless","rippleColor","children","style","rest","TouchableNativeFeedback","Ripple","Children","only"],"mappings":";;;AAaA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AASA,IAAMC,wBAAwB,GAAG,EAAjC;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAO7B,MACEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IACAD,QAAQ,CAACE,OAAT,IAAoBL,wBAFtB,EAGE;AAAA,4BAOIE,KAPJ,CAEEI,UAFF;AAAA,QAEEA,UAFF,kCAEe,KAFf;AAAA,6BAOIJ,KAPJ,CAGEK,WAHF;AAAA,QAGEA,WAHF,mCAGgB,qBAHhB;AAAA,QAIEC,SAJF,GAOIN,KAPJ,CAIEM,QAJF;AAAA,QAKEC,KALF,GAOIP,KAPJ,CAKEO,KALF;AAAA,QAMKC,IANL,4BAOIR,KAPJ;;AAQA,WACE,oBAAC,uBAAD,eACMQ,IADN;AAEE,MAAA,KAAK,EAAE,IAFT;AAGE,MAAA,UAAU,EAAEC,uBAAuB,CAACC,MAAxB,CAA+BL,WAA/B,EAA4CD,UAA5C,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBV,KAAK,CAACc,QAAN,CAAeC,IAAf,CAAoBN,SAApB,CAArB,CAJF,CADF;AAQD;;AA1B4B,MA4BtBA,QA5BsB,GA4BVN,KA5BU,CA4BtBM,QA5BsB;AA6B7B,SACE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE;AAAjC,KAA2CN,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,MACGM,QADH,CADF;AAKD,CAlCD;;AAoCA,eAAeP,aAAf","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n *\n * TouchableItem renders a touchable that looks native on both iOS and Android\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity\n */\n\n// import node modules\nimport React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\n// TouchableItem config\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\n// TouchableItem\nconst TouchableItem = props => {\n  /**\n   * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n   * therefore only enable it on Android Lollipop and above\n   *\n   * We need to pass the background prop to specify a borderless ripple effect\n   */\n  if (\n    Platform.OS === 'android' &&\n    Platform.Version >= ANDROID_VERSION_LOLLIPOP\n  ) {\n    const {\n      borderless = false,\n      rippleColor = 'rgba(0, 0, 0, 0.16)',\n      children,\n      style,\n      ...rest\n    } = props;\n    return (\n      <TouchableNativeFeedback\n        {...rest}\n        style={null}\n        background={TouchableNativeFeedback.Ripple(rippleColor, borderless)}>\n        <View style={style}>{React.Children.only(children)}</View>\n      </TouchableNativeFeedback>\n    );\n  }\n\n  const {children} = props;\n  return (\n    <TouchableOpacity activeOpacity={0.85} {...props}>\n      {children}\n    </TouchableOpacity>\n  );\n};\n\nexport default TouchableItem;\n"]},"metadata":{},"sourceType":"module"}