{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/forgotpassword/ForgotPasswordB.js\";\nimport React, { Component } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\nimport Color from 'color';\nimport ActivityIndicatorModal from \"../../components/modals/ActivityIndicatorModal\";\nimport Button from \"../../components/buttons/Button\";\nimport GradientContainer from \"../../components/gradientcontainer/GradientContainer\";\nimport { Paragraph } from \"../../components/text/CustomText\";\nimport UnderlineTextInput from \"../../components/textinputs/UnderlineTextInput\";\nimport Colors from \"../../theme/colors\";\nimport Layout from \"../../theme/layout\";\nvar PLACEHOLDER_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\nvar INPUT_TEXT_COLOR = '#fff';\nvar INPUT_BORDER_COLOR = 'rgba(255, 255, 255, 0.4)';\nvar INPUT_FOCUSED_BORDER_COLOR = '#fff';\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1\n  },\n  contentContainerStyle: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: 64,\n    paddingHorizontal: 24\n  },\n  instructionContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: Color(Colors.surface).alpha(0.96)\n  },\n  instruction: {\n    marginTop: 32,\n    paddingHorizontal: 16,\n    fontSize: 14,\n    color: Colors.onPrimaryColor,\n    textAlign: 'center'\n  },\n  inputContainer: {\n    paddingTop: 16\n  },\n  inputStyle: {\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    paddingTop: 22\n  }\n});\n\nvar ForgotPasswordB = function (_Component) {\n  _inherits(ForgotPasswordB, _Component);\n\n  function ForgotPasswordB(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordB);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPasswordB).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', _this.keyboardDidShow);\n      _this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', _this.keyboardDidHide);\n    };\n\n    _this.componentWillUnmount = function () {\n      clearTimeout(_this.timeout);\n\n      _this.keyboardDidShowListener.remove();\n\n      _this.keyboardDidHideListener.remove();\n    };\n\n    _this.keyboardDidShow = function () {\n      _this.setState({\n        emailFocused: true\n      });\n    };\n\n    _this.keyboardDidHide = function () {\n      _this.setState({\n        emailFocused: false\n      });\n    };\n\n    _this.emailChange = function (text) {\n      _this.setState({\n        email: text\n      });\n    };\n\n    _this.navigateTo = function (screen) {\n      var navigation = _this.props.navigation;\n      navigation.navigate(screen);\n    };\n\n    _this.resetPassword = function () {\n      Keyboard.dismiss();\n\n      _this.setState({\n        modalVisible: true,\n        emailFocused: false\n      }, function () {\n        _this.timeout = setTimeout(function () {\n          _this.closeModal();\n        }, 3000);\n      });\n    };\n\n    _this.closeModal = function () {\n      clearTimeout(_this.timeout);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.state = {\n      email: '',\n      emailFocused: false,\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPasswordB, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          emailFocused = _this$state.emailFocused,\n          modalVisible = _this$state.modalVisible;\n      return React.createElement(GradientContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        }\n      }, React.createElement(SafeAreaView, {\n        forceInset: {\n          top: 'never'\n        },\n        style: styles.screenContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Colors.primaryColor,\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      }), React.createElement(ScrollView, {\n        contentContainerStyle: styles.contentContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      }, React.createElement(View, {\n        style: styles.instructionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        }\n      }, React.createElement(View, {\n        style: styles.iconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        }\n      }, React.createElement(Icon, {\n        name: \"lock-outline\",\n        size: 36,\n        color: Colors.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        }\n      })), React.createElement(Paragraph, {\n        style: styles.instruction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        }\n      }, \"Enter your e-mail address below to receive your password reset instruction\")), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onChangeText: this.emailChange,\n        inputFocused: emailFocused,\n        onSubmitEditing: this.resetPassword,\n        returnKeyType: \"done\",\n        blurOnSubmit: false,\n        keyboardType: \"email-address\",\n        placeholder: \"E-mail address\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        inputStyle: styles.inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      })), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        }\n      }, React.createElement(Button, {\n        onPress: this.resetPassword,\n        disabled: false,\n        color: Colors.surface,\n        small: true,\n        title: 'Reset password'.toUpperCase(),\n        titleColor: Colors.primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      })), React.createElement(ActivityIndicatorModal, {\n        statusBarColor: Color(Colors.primaryColorDark).darken(0.4).rgb().string(),\n        message: \"Please wait . . .\",\n        onRequestClose: this.closeModal,\n        title: \"Sending instructions\",\n        visible: modalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      }))));\n    }\n  }]);\n\n  return ForgotPasswordB;\n}(Component);\n\nexport { ForgotPasswordB as default };","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/forgotpassword/ForgotPasswordB.js"],"names":["React","Component","MaterialCommunityIcons","Icon","Color","ActivityIndicatorModal","Button","GradientContainer","Paragraph","UnderlineTextInput","Colors","Layout","PLACEHOLDER_TEXT_COLOR","INPUT_TEXT_COLOR","INPUT_BORDER_COLOR","INPUT_FOCUSED_BORDER_COLOR","styles","StyleSheet","create","screenContainer","flex","contentContainerStyle","justifyContent","alignItems","paddingTop","paddingHorizontal","instructionContainer","iconContainer","width","height","borderRadius","backgroundColor","surface","alpha","instruction","marginTop","fontSize","color","onPrimaryColor","textAlign","inputContainer","inputStyle","buttonContainer","ForgotPasswordB","props","componentDidMount","keyboardDidShowListener","Keyboard","addListener","keyboardDidShow","keyboardDidHideListener","keyboardDidHide","componentWillUnmount","clearTimeout","timeout","remove","setState","emailFocused","emailChange","text","email","navigateTo","screen","navigation","navigate","resetPassword","dismiss","modalVisible","setTimeout","closeModal","state","top","primaryColor","toUpperCase","primaryColorDark","darken","rgb","string"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  Keyboard,\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {MaterialCommunityIcons as Icon} from '@expo/vector-icons';\nimport Color from 'color';\n\n// import components\nimport ActivityIndicatorModal from '../../components/modals/ActivityIndicatorModal';\nimport Button from '../../components/buttons/Button';\nimport GradientContainer from '../../components/gradientcontainer/GradientContainer';\nimport {Paragraph} from '../../components/text/CustomText';\nimport UnderlineTextInput from '../../components/textinputs/UnderlineTextInput';\n\n// import colors, layout\nimport Colors from '../../theme/colors';\nimport Layout from '../../theme/layout';\n\n// ForgotPasswordB Config\nconst PLACEHOLDER_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\nconst INPUT_TEXT_COLOR = '#fff';\nconst INPUT_BORDER_COLOR = 'rgba(255, 255, 255, 0.4)';\nconst INPUT_FOCUSED_BORDER_COLOR = '#fff';\n\n// ForgotPasswordB Styles\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n  },\n  contentContainerStyle: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: 64,\n    paddingHorizontal: 24,\n  },\n  instructionContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: Color(Colors.surface).alpha(0.96),\n  },\n  instruction: {\n    marginTop: 32,\n    paddingHorizontal: 16,\n    fontSize: 14,\n    color: Colors.onPrimaryColor,\n    textAlign: 'center',\n  },\n  inputContainer: {\n    paddingTop: 16,\n  },\n  inputStyle: {\n    textAlign: 'center',\n  },\n  buttonContainer: {\n    paddingTop: 22,\n  },\n});\n\n// ForgotPasswordB\nexport default class ForgotPasswordB extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      emailFocused: false,\n      modalVisible: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      this.keyboardDidShow,\n    );\n    this.keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      this.keyboardDidHide,\n    );\n  };\n\n  // avoid memory leak\n  componentWillUnmount = () => {\n    clearTimeout(this.timeout);\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n  };\n\n  keyboardDidShow = () => {\n    this.setState({\n      emailFocused: true,\n    });\n  };\n\n  keyboardDidHide = () => {\n    this.setState({\n      emailFocused: false,\n    });\n  };\n\n  emailChange = text => {\n    this.setState({\n      email: text,\n    });\n  };\n\n  navigateTo = screen => {\n    const {navigation} = this.props;\n    navigation.navigate(screen);\n  };\n\n  resetPassword = () => {\n    Keyboard.dismiss();\n    this.setState(\n      {\n        modalVisible: true,\n        emailFocused: false,\n      },\n      () => {\n        // for demo purpose after 3s close modal\n        this.timeout = setTimeout(() => {\n          this.closeModal();\n        }, 3000);\n      },\n    );\n  };\n\n  closeModal = () => {\n    // for demo purpose clear timeout if user request close modal before 3s timeout\n    clearTimeout(this.timeout);\n    this.setState({\n      modalVisible: false,\n    });\n  };\n\n  render() {\n    const {emailFocused, modalVisible} = this.state;\n\n    return (\n      <GradientContainer>\n        <SafeAreaView\n          forceInset={{top: 'never'}}\n          style={styles.screenContainer}>\n          <StatusBar\n            backgroundColor={Colors.primaryColor}\n            barStyle=\"light-content\"\n          />\n\n          <ScrollView contentContainerStyle={styles.contentContainerStyle}>\n            <View style={styles.instructionContainer}>\n              <View style={styles.iconContainer}>\n                <Icon\n                  name=\"lock-outline\"\n                  size={36}\n                  color={Colors.primaryColor}\n                />\n              </View>\n              <Paragraph style={styles.instruction}>\n                Enter your e-mail address below to receive your password reset\n                instruction\n              </Paragraph>\n            </View>\n\n            <View style={styles.inputContainer}>\n              <UnderlineTextInput\n                onChangeText={this.emailChange}\n                inputFocused={emailFocused}\n                onSubmitEditing={this.resetPassword}\n                returnKeyType=\"done\"\n                blurOnSubmit={false}\n                keyboardType=\"email-address\"\n                placeholder=\"E-mail address\"\n                placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                inputTextColor={INPUT_TEXT_COLOR}\n                borderColor={INPUT_BORDER_COLOR}\n                focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                inputStyle={styles.inputStyle}\n              />\n            </View>\n\n            <View style={styles.buttonContainer}>\n              <Button\n                onPress={this.resetPassword}\n                disabled={false}\n                color={Colors.surface}\n                small\n                title={'Reset password'.toUpperCase()}\n                titleColor={Colors.primaryColor}\n              />\n            </View>\n\n            <ActivityIndicatorModal\n              statusBarColor={Color(Colors.primaryColorDark)\n                .darken(0.4)\n                .rgb()\n                .string()}\n              message=\"Please wait . . .\"\n              onRequestClose={this.closeModal}\n              title=\"Sending instructions\"\n              visible={modalVisible}\n            />\n          </ScrollView>\n        </SafeAreaView>\n      </GradientContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}