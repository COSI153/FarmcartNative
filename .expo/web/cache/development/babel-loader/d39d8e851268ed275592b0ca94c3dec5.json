{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/address/AddAddressB.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from 'color';\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport ActivityIndicatorModal from \"../../components/modals/ActivityIndicatorModal\";\nimport Button from \"../../components/buttons/Button\";\nimport { Caption, Paragraph } from \"../../components/text/CustomText\";\nimport TouchableItem from \"../../components/TouchableItem\";\nimport UnderlineTextInput from \"../../components/textinputs/UnderlineTextInput\";\nimport Colors from \"../../theme/colors\";\nvar HOME_ICON = 'home-variant-outline';\nvar OFFICE_ICON = 'briefcase-outline';\nvar APARTMAN_ICON = 'office-building';\nvar ICON_COLOR = 'rgb(35, 47, 52)';\nvar PLACEHOLDER_TEXT_COLOR = 'rgba(0, 0, 0, 0.4)';\nvar INPUT_TEXT_COLOR = 'rgba(0, 0, 0, 0.87)';\nvar INPUT_BORDER_COLOR = 'rgba(0, 0, 0, 0.2)';\nvar INPUT_FOCUSED_BORDER_COLOR = '#000';\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    backgroundColor: Colors.background\n  },\n  contentContainerStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 24\n  },\n  instructionContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  picker: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 104\n  },\n  touchArea: {\n    marginHorizontal: 16,\n    marginBottom: 6,\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n    backgroundColor: 'rgba(35, 47, 52, 0.12)',\n    overflow: 'hidden'\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 44,\n    height: 44,\n    borderRadius: 22\n  },\n  instruction: {\n    marginTop: 32,\n    paddingHorizontal: 40,\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  form: {\n    padding: 12\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%'\n  },\n  inputContainer: {\n    margin: 8\n  },\n  small: {\n    flex: 2\n  },\n  large: {\n    flex: 5\n  },\n  buttonContainer: {\n    marginTop: 20\n  }\n});\n\nvar AddAddressB = function (_Component) {\n  _inherits(AddAddressB, _Component);\n\n  function AddAddressB(props) {\n    var _this;\n\n    _classCallCheck(this, AddAddressB);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddAddressB).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', _this.keyboardDidHide);\n    };\n\n    _this.componentWillUnmount = function () {\n      clearTimeout(_this.timeout);\n\n      _this.keyboardDidHideListener.remove();\n    };\n\n    _this.keyboardDidHide = function () {\n      _this.setState({\n        numberFocused: false,\n        streetFocused: false,\n        districtFocused: false,\n        zipFocused: false,\n        cityFocused: false\n      });\n    };\n\n    _this.goBack = function () {\n      var navigation = _this.props.navigation;\n      navigation.goBack();\n    };\n\n    _this.setAddressType = function (type) {\n      return function () {\n        _this.setState({\n          addressType: type\n        });\n      };\n    };\n\n    _this.onChangeText = function (key) {\n      return function (text) {\n        _this.setState(_defineProperty({}, key, text));\n      };\n    };\n\n    _this.onFocus = function (key) {\n      return function () {\n        var focusedInputs = {\n          numberFocused: false,\n          streetFocused: false,\n          districtFocused: false,\n          zipFocused: false,\n          cityFocused: false\n        };\n        focusedInputs[key] = true;\n\n        _this.setState(_objectSpread({}, focusedInputs));\n      };\n    };\n\n    _this.focusOn = function (nextFiled) {\n      return function () {\n        if (nextFiled) {\n          nextFiled.focus();\n        }\n      };\n    };\n\n    _this.saveAddress = function () {\n      Keyboard.dismiss();\n\n      _this.setState({\n        modalVisible: true,\n        emailFocused: false\n      }, function () {\n        _this.timeout = setTimeout(function () {\n          _this.closeModal();\n        }, 3000);\n      });\n    };\n\n    _this.closeModal = function () {\n      clearTimeout(_this.timeout);\n\n      _this.setState({\n        modalVisible: false\n      }, function () {\n        _this.goBack();\n      });\n    };\n\n    _this.state = {\n      addressType: 'home',\n      number: '',\n      numberFocused: false,\n      street: '',\n      streetFocused: false,\n      district: '',\n      districtFocused: false,\n      zip: '',\n      zipFocused: false,\n      city: '',\n      cityFocused: false,\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(AddAddressB, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          addressType = _this$state.addressType,\n          numberFocused = _this$state.numberFocused,\n          streetFocused = _this$state.streetFocused,\n          districtFocused = _this$state.districtFocused,\n          zipFocused = _this$state.zipFocused,\n          cityFocused = _this$state.cityFocused,\n          modalVisible = _this$state.modalVisible;\n      return React.createElement(SafeAreaView, {\n        style: styles.screenContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Colors.primaryColor,\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }), React.createElement(KeyboardAwareScrollView, {\n        contentContainerStyle: styles.contentContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        }\n      }, React.createElement(View, {\n        style: styles.picker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      }, React.createElement(View, {\n        style: [styles.touchArea, addressType == 'apartment' && {\n          backgroundColor: Colors.primaryColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }, React.createElement(TouchableItem, {\n        onPress: this.setAddressType('apartment'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        }\n      }, React.createElement(View, {\n        style: styles.iconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        }\n      }, React.createElement(Icon, {\n        name: APARTMAN_ICON,\n        size: 19,\n        color: addressType == 'apartment' ? Colors.onPrimaryColor : ICON_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        }\n      })))), React.createElement(Caption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, \"Apartment\")), React.createElement(View, {\n        style: styles.picker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        }\n      }, React.createElement(View, {\n        style: [styles.touchArea, addressType == 'home' && {\n          backgroundColor: Colors.primaryColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        }\n      }, React.createElement(TouchableItem, {\n        onPress: this.setAddressType('home'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }, React.createElement(View, {\n        style: styles.iconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        }\n      }, React.createElement(Icon, {\n        name: HOME_ICON,\n        size: 19,\n        color: addressType == 'home' ? Colors.onPrimaryColor : ICON_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        }\n      })))), React.createElement(Caption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        }\n      }, \"Home\")), React.createElement(View, {\n        style: styles.picker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        }\n      }, React.createElement(View, {\n        style: [styles.touchArea, addressType == 'office' && {\n          backgroundColor: Colors.primaryColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        }\n      }, React.createElement(TouchableItem, {\n        onPress: this.setAddressType('office'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        }\n      }, React.createElement(View, {\n        style: styles.iconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        }\n      }, React.createElement(Icon, {\n        name: OFFICE_ICON,\n        size: 19,\n        color: addressType == 'office' ? Colors.onPrimaryColor : ICON_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        }\n      })))), React.createElement(Caption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        }\n      }, \"Office\"))), React.createElement(View, {\n        style: styles.instructionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        }\n      }, React.createElement(Paragraph, {\n        style: styles.instruction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        }\n      }, \"Enter your delivery address details\")), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        }\n      }, React.createElement(View, {\n        style: [styles.inputContainer, styles.small],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onChangeText: this.onChangeText('number'),\n        onFocus: this.onFocus('numberFocused'),\n        inputFocused: numberFocused,\n        onSubmitEditing: this.focusOn(this.street),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        placeholder: \"Number\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        }\n      })), React.createElement(View, {\n        style: [styles.inputContainer, styles.large],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.street = r;\n        },\n        onChangeText: this.onChangeText('street'),\n        onFocus: this.onFocus('streetFocused'),\n        inputFocused: streetFocused,\n        onSubmitEditing: this.focusOn(this.district),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        placeholder: \"Street name\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        }\n      }))), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.district = r;\n        },\n        onChangeText: this.onChangeText('district'),\n        onFocus: this.onFocus('districtFocused'),\n        inputFocused: districtFocused,\n        onSubmitEditing: this.focusOn(this.zip),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        placeholder: \"District\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        }\n      })), React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        }\n      }, React.createElement(View, {\n        style: [styles.inputContainer, styles.small],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.zip = r;\n        },\n        onChangeText: this.onChangeText('zip'),\n        onFocus: this.onFocus('zipFocused'),\n        inputFocused: zipFocused,\n        onSubmitEditing: this.focusOn(this.city),\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        placeholder: \"ZIP Code\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        }\n      })), React.createElement(View, {\n        style: [styles.inputContainer, styles.large],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        }\n      }, React.createElement(UnderlineTextInput, {\n        onRef: function onRef(r) {\n          _this2.city = r;\n        },\n        onChangeText: this.onChangeText('city'),\n        onFocus: this.onFocus('cityFocused'),\n        inputFocused: cityFocused,\n        onSubmitEditing: this.saveAddress,\n        returnKeyType: \"done\",\n        blurOnSubmit: false,\n        placeholder: \"City\",\n        placeholderTextColor: PLACEHOLDER_TEXT_COLOR,\n        inputTextColor: INPUT_TEXT_COLOR,\n        borderColor: INPUT_BORDER_COLOR,\n        focusedBorderColor: INPUT_FOCUSED_BORDER_COLOR,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        }\n      })))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        }\n      }, React.createElement(Button, {\n        onPress: this.saveAddress,\n        disabled: false,\n        small: true,\n        title: 'Save address'.toUpperCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        }\n      })), React.createElement(ActivityIndicatorModal, {\n        statusBarColor: Color(Colors.primaryColorDark).darken(0.4).rgb().string(),\n        message: \"Please wait . . .\",\n        onRequestClose: this.closeModal,\n        title: \"Saving address\",\n        visible: modalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        }\n      })));\n    }\n  }]);\n\n  return AddAddressB;\n}(Component);\n\nexport { AddAddressB as default };","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/screens/address/AddAddressB.js"],"names":["React","Component","Color","MaterialCommunityIcons","Icon","KeyboardAwareScrollView","ActivityIndicatorModal","Button","Caption","Paragraph","TouchableItem","UnderlineTextInput","Colors","HOME_ICON","OFFICE_ICON","APARTMAN_ICON","ICON_COLOR","PLACEHOLDER_TEXT_COLOR","INPUT_TEXT_COLOR","INPUT_BORDER_COLOR","INPUT_FOCUSED_BORDER_COLOR","styles","StyleSheet","create","screenContainer","flex","backgroundColor","background","contentContainerStyle","justifyContent","alignItems","paddingVertical","instructionContainer","picker","width","touchArea","marginHorizontal","marginBottom","height","borderRadius","overflow","iconContainer","instruction","marginTop","paddingHorizontal","fontSize","textAlign","form","padding","row","flexDirection","inputContainer","margin","small","large","buttonContainer","AddAddressB","props","componentDidMount","keyboardDidHideListener","Keyboard","addListener","keyboardDidHide","componentWillUnmount","clearTimeout","timeout","remove","setState","numberFocused","streetFocused","districtFocused","zipFocused","cityFocused","goBack","navigation","setAddressType","type","addressType","onChangeText","key","text","onFocus","focusedInputs","focusOn","nextFiled","focus","saveAddress","dismiss","modalVisible","emailFocused","setTimeout","closeModal","state","number","street","district","zip","city","primaryColor","onPrimaryColor","r","toUpperCase","primaryColorDark","darken","rgb","string"],"mappings":"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","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React, {Component} from 'react';\nimport {\n  Keyboard,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport Color from 'color';\nimport {MaterialCommunityIcons as Icon} from '@expo/vector-icons';\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';\n\n// import components\nimport ActivityIndicatorModal from '../../components/modals/ActivityIndicatorModal';\nimport Button from '../../components/buttons/Button';\nimport {Caption, Paragraph} from '../../components/text/CustomText';\nimport TouchableItem from '../../components/TouchableItem';\nimport UnderlineTextInput from '../../components/textinputs/UnderlineTextInput';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// AddAddressB Config\nconst HOME_ICON = 'home-variant-outline';\nconst OFFICE_ICON = 'briefcase-outline';\nconst APARTMAN_ICON = 'office-building';\nconst ICON_COLOR = 'rgb(35, 47, 52)';\nconst PLACEHOLDER_TEXT_COLOR = 'rgba(0, 0, 0, 0.4)';\nconst INPUT_TEXT_COLOR = 'rgba(0, 0, 0, 0.87)';\nconst INPUT_BORDER_COLOR = 'rgba(0, 0, 0, 0.2)';\nconst INPUT_FOCUSED_BORDER_COLOR = '#000';\n\n// AddAddressB Styles\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    backgroundColor: Colors.background,\n  },\n  contentContainerStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 24,\n  },\n  instructionContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  picker: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 104,\n  },\n  touchArea: {\n    marginHorizontal: 16,\n    marginBottom: 6,\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n    backgroundColor: 'rgba(35, 47, 52, 0.12)',\n    overflow: 'hidden',\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n  },\n  instruction: {\n    marginTop: 32,\n    paddingHorizontal: 40,\n    fontSize: 14,\n    textAlign: 'center',\n  },\n  form: {\n    padding: 12,\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n  },\n  inputContainer: {\n    margin: 8,\n  },\n  small: {\n    flex: 2,\n  },\n  large: {\n    flex: 5,\n  },\n  buttonContainer: {\n    marginTop: 20,\n  },\n});\n\n// AddAddressB\nexport default class AddAddressB extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      addressType: 'home',\n      number: '',\n      numberFocused: false,\n      street: '',\n      streetFocused: false,\n      district: '',\n      districtFocused: false,\n      zip: '',\n      zipFocused: false,\n      city: '',\n      cityFocused: false,\n      modalVisible: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      this.keyboardDidHide,\n    );\n  };\n\n  // avoid memory leak\n  componentWillUnmount = () => {\n    clearTimeout(this.timeout);\n    this.keyboardDidHideListener.remove();\n  };\n\n  keyboardDidHide = () => {\n    this.setState({\n      numberFocused: false,\n      streetFocused: false,\n      districtFocused: false,\n      zipFocused: false,\n      cityFocused: false,\n    });\n  };\n\n  goBack = () => {\n    const {navigation} = this.props;\n    navigation.goBack();\n  };\n\n  setAddressType = (type) => () => {\n    this.setState({\n      addressType: type,\n    });\n  };\n\n  onChangeText = (key) => (text) => {\n    this.setState({\n      [key]: text,\n    });\n  };\n\n  onFocus = (key) => () => {\n    let focusedInputs = {\n      numberFocused: false,\n      streetFocused: false,\n      districtFocused: false,\n      zipFocused: false,\n      cityFocused: false,\n    };\n    focusedInputs[key] = true;\n\n    this.setState({\n      ...focusedInputs,\n    });\n  };\n\n  focusOn = (nextFiled) => () => {\n    if (nextFiled) {\n      nextFiled.focus();\n    }\n  };\n\n  saveAddress = () => {\n    Keyboard.dismiss();\n\n    this.setState(\n      {\n        modalVisible: true,\n        emailFocused: false,\n      },\n      () => {\n        // for demo purpose after 3s close modal\n        this.timeout = setTimeout(() => {\n          this.closeModal();\n        }, 3000);\n      },\n    );\n  };\n\n  closeModal = () => {\n    // for demo purpose clear timeout if user request close modal before 3s timeout\n    clearTimeout(this.timeout);\n    this.setState(\n      {\n        modalVisible: false,\n      },\n      () => {\n        this.goBack();\n      },\n    );\n  };\n\n  render() {\n    const {\n      addressType,\n      numberFocused,\n      streetFocused,\n      districtFocused,\n      zipFocused,\n      cityFocused,\n      modalVisible,\n    } = this.state;\n\n    return (\n      <SafeAreaView style={styles.screenContainer}>\n        <StatusBar\n          backgroundColor={Colors.primaryColor}\n          barStyle=\"light-content\"\n        />\n\n        <KeyboardAwareScrollView\n          contentContainerStyle={styles.contentContainerStyle}>\n          <View style={styles.row}>\n            <View style={styles.picker}>\n              <View\n                style={[\n                  styles.touchArea,\n                  addressType == 'apartment' && {\n                    backgroundColor: Colors.primaryColor,\n                  },\n                ]}>\n                <TouchableItem onPress={this.setAddressType('apartment')}>\n                  <View style={styles.iconContainer}>\n                    <Icon\n                      name={APARTMAN_ICON}\n                      size={19}\n                      color={\n                        addressType == 'apartment'\n                          ? Colors.onPrimaryColor\n                          : ICON_COLOR\n                      }\n                    />\n                  </View>\n                </TouchableItem>\n              </View>\n              <Caption>Apartment</Caption>\n            </View>\n\n            <View style={styles.picker}>\n              <View\n                style={[\n                  styles.touchArea,\n                  addressType == 'home' && {\n                    backgroundColor: Colors.primaryColor,\n                  },\n                ]}>\n                <TouchableItem onPress={this.setAddressType('home')}>\n                  <View style={styles.iconContainer}>\n                    <Icon\n                      name={HOME_ICON}\n                      size={19}\n                      color={\n                        addressType == 'home'\n                          ? Colors.onPrimaryColor\n                          : ICON_COLOR\n                      }\n                    />\n                  </View>\n                </TouchableItem>\n              </View>\n              <Caption>Home</Caption>\n            </View>\n\n            <View style={styles.picker}>\n              <View\n                style={[\n                  styles.touchArea,\n                  addressType == 'office' && {\n                    backgroundColor: Colors.primaryColor,\n                  },\n                ]}>\n                <TouchableItem onPress={this.setAddressType('office')}>\n                  <View style={styles.iconContainer}>\n                    <Icon\n                      name={OFFICE_ICON}\n                      size={19}\n                      color={\n                        addressType == 'office'\n                          ? Colors.onPrimaryColor\n                          : ICON_COLOR\n                      }\n                    />\n                  </View>\n                </TouchableItem>\n              </View>\n              <Caption>Office</Caption>\n            </View>\n          </View>\n\n          <View style={styles.instructionContainer}>\n            <Paragraph style={styles.instruction}>\n              Enter your delivery address details\n            </Paragraph>\n          </View>\n\n          <View style={styles.form}>\n            <View style={styles.row}>\n              <View style={[styles.inputContainer, styles.small]}>\n                <UnderlineTextInput\n                  onChangeText={this.onChangeText('number')}\n                  onFocus={this.onFocus('numberFocused')}\n                  inputFocused={numberFocused}\n                  onSubmitEditing={this.focusOn(this.street)}\n                  returnKeyType=\"next\"\n                  blurOnSubmit={false}\n                  placeholder=\"Number\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                />\n              </View>\n\n              <View style={[styles.inputContainer, styles.large]}>\n                <UnderlineTextInput\n                  onRef={(r) => {\n                    this.street = r;\n                  }}\n                  onChangeText={this.onChangeText('street')}\n                  onFocus={this.onFocus('streetFocused')}\n                  inputFocused={streetFocused}\n                  onSubmitEditing={this.focusOn(this.district)}\n                  returnKeyType=\"next\"\n                  blurOnSubmit={false}\n                  placeholder=\"Street name\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                />\n              </View>\n            </View>\n\n            <View style={styles.inputContainer}>\n              <UnderlineTextInput\n                onRef={(r) => {\n                  this.district = r;\n                }}\n                onChangeText={this.onChangeText('district')}\n                onFocus={this.onFocus('districtFocused')}\n                inputFocused={districtFocused}\n                onSubmitEditing={this.focusOn(this.zip)}\n                returnKeyType=\"next\"\n                blurOnSubmit={false}\n                placeholder=\"District\"\n                placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                inputTextColor={INPUT_TEXT_COLOR}\n                borderColor={INPUT_BORDER_COLOR}\n                focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n              />\n            </View>\n\n            <View style={styles.row}>\n              <View style={[styles.inputContainer, styles.small]}>\n                <UnderlineTextInput\n                  onRef={(r) => {\n                    this.zip = r;\n                  }}\n                  onChangeText={this.onChangeText('zip')}\n                  onFocus={this.onFocus('zipFocused')}\n                  inputFocused={zipFocused}\n                  onSubmitEditing={this.focusOn(this.city)}\n                  returnKeyType=\"next\"\n                  blurOnSubmit={false}\n                  placeholder=\"ZIP Code\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                />\n              </View>\n\n              <View style={[styles.inputContainer, styles.large]}>\n                <UnderlineTextInput\n                  onRef={(r) => {\n                    this.city = r;\n                  }}\n                  onChangeText={this.onChangeText('city')}\n                  onFocus={this.onFocus('cityFocused')}\n                  inputFocused={cityFocused}\n                  onSubmitEditing={this.saveAddress}\n                  returnKeyType=\"done\"\n                  blurOnSubmit={false}\n                  placeholder=\"City\"\n                  placeholderTextColor={PLACEHOLDER_TEXT_COLOR}\n                  inputTextColor={INPUT_TEXT_COLOR}\n                  borderColor={INPUT_BORDER_COLOR}\n                  focusedBorderColor={INPUT_FOCUSED_BORDER_COLOR}\n                />\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.buttonContainer}>\n            <Button\n              onPress={this.saveAddress}\n              disabled={false}\n              small\n              title={'Save address'.toUpperCase()}\n            />\n          </View>\n\n          <ActivityIndicatorModal\n            statusBarColor={Color(Colors.primaryColorDark)\n              .darken(0.4)\n              .rgb()\n              .string()}\n            message=\"Please wait . . .\"\n            onRequestClose={this.closeModal}\n            title=\"Saving address\"\n            visible={modalVisible}\n          />\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}