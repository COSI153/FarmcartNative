{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/navigation/TabBadgeIcon.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialCommunityIcons as Icon } from '@expo/vector-icons';\nimport Colors from \"../../theme/colors\";\nvar styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    top: -4,\n    right: -4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 16,\n    height: 16,\n    borderRadius: 8,\n    backgroundColor: Colors.secondaryColor\n  },\n  badgeText: {\n    top: -0.5,\n    fontSize: 10,\n    color: Colors.onSecondaryColor\n  }\n});\n\nvar TabBadgeIcon = function TabBadgeIcon(_ref) {\n  var badgeCount = _ref.badgeCount,\n      color = _ref.color,\n      focused = _ref.focused,\n      name = _ref.name,\n      size = _ref.size;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    }\n  }, React.createElement(Icon, {\n    name: name,\n    size: size,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    }\n  }), badgeCount > 0 && React.createElement(View, {\n    style: styles.badge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }, React.createElement(Text, {\n    style: styles.badgeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, badgeCount)));\n};\n\nexport default TabBadgeIcon;","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/codecanyon-RWquqpyI-food-delivery-react-native-template/FoodDelivery_Expo/src/components/navigation/TabBadgeIcon.js"],"names":["React","MaterialCommunityIcons","Icon","Colors","styles","StyleSheet","create","badge","position","top","right","justifyContent","alignItems","width","height","borderRadius","backgroundColor","secondaryColor","badgeText","fontSize","color","onSecondaryColor","TabBadgeIcon","badgeCount","focused","name","size"],"mappings":";AAQA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,sBAAsB,IAAIC,IAAlC,QAA6C,oBAA7C;AAGA,OAAOC,MAAP;AAKA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,GAAG,EAAE,CAAC,CAFD;AAGLC,IAAAA,KAAK,EAAE,CAAC,CAHH;AAILC,IAAAA,cAAc,EAAE,QAJX;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLC,IAAAA,KAAK,EAAE,EANF;AAOLC,IAAAA,MAAM,EAAE,EAPH;AAQLC,IAAAA,YAAY,EAAE,CART;AASLC,IAAAA,eAAe,EAAEb,MAAM,CAACc;AATnB,GADwB;AAY/BC,EAAAA,SAAS,EAAE;AACTT,IAAAA,GAAG,EAAE,CAAC,GADG;AAETU,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,KAAK,EAAEjB,MAAM,CAACkB;AAHL;AAZoB,CAAlB,CAAf;;AAoBA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,MAAcH,KAAd,QAAcA,KAAd;AAAA,MAAqBI,OAArB,QAAqBA,OAArB;AAAA,MAA8BC,IAA9B,QAA8BA,IAA9B;AAAA,MAAoCC,IAApC,QAAoCA,IAApC;AAAA,SACnB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,IAAI,EAAEC,IAAxB;AAA8B,IAAA,KAAK,EAAEN,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGG,UAAU,GAAG,CAAb,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCK,UAAhC,CADF,CAHJ,CADmB;AAAA,CAArB;;AAWA,eAAeD,YAAf","sourcesContent":["/**\n * Food Delivery - React Native Template\n *\n * @format\n * @flow\n */\n\n// import dependencies\nimport React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\nimport {MaterialCommunityIcons as Icon} from '@expo/vector-icons';\n\n// import colors\nimport Colors from '../../theme/colors';\n\n// TabBadgeIcon Config\n\n// TabBadgeIcon Styles\nconst styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    top: -4,\n    right: -4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 16,\n    height: 16,\n    borderRadius: 8,\n    backgroundColor: Colors.secondaryColor,\n  },\n  badgeText: {\n    top: -0.5,\n    fontSize: 10,\n    color: Colors.onSecondaryColor,\n  },\n});\n\n// TabBadgeIcon\nconst TabBadgeIcon = ({badgeCount, color, focused, name, size}) => (\n  <View>\n    <Icon name={name} size={size} color={color} />\n    {badgeCount > 0 && (\n      <View style={styles.badge}>\n        <Text style={styles.badgeText}>{badgeCount}</Text>\n      </View>\n    )}\n  </View>\n);\n\nexport default TabBadgeIcon;\n"]},"metadata":{},"sourceType":"module"}